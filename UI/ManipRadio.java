/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BD.BdConnection;
import BD.ExamenBD;
import BD.IdPacs;
import BD.ImageBD;
import BD.PatientsBD;
import NOYAU.Genre;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Graphics;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sosso
 */
public class ManipRadio extends javax.swing.JFrame {

    private File selFile;
    private BufferedImage image;
/**
 * 
 * @throws SQLException 
 */
    public ManipRadio() throws SQLException {
        initComponents();
        numArchivagenew.setVisible(false);
        ConsulterDMR.setEnabled(false);
        jTabbedPane1.setEnabledAt(1, false);

        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);

        image = null;
        selFile = null;
        ExamenBD exam = new ExamenBD();
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        liste = exam.listeExam(liste);
        Tableau.setModel(liste);
        Tableau.setDefaultEditor(Object.class, null);
        Tableau.repaint();
        setIcone();

    }
/**
 * 
 */
    public void setIcone() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo Radiosistem2.jpeg")));

    }
/**
 * 
 * @return 
 */
    public JLabel getIdentifiantPro() {
        return identifiantPro;
    }

    public JLabel getNomPrenomUtilisateur() {
        return NomPrenomUtilisateur;
    }

  

    public static BufferedImage rotateImage(BufferedImage imageToRotate) {
        int widthOfImage = imageToRotate.getWidth();
        int heightOfImage = imageToRotate.getHeight();
        int typeOfImage = imageToRotate.getType();

        BufferedImage newImageFromBuffer = new BufferedImage(widthOfImage, heightOfImage, typeOfImage);

        Graphics2D graphics2D = newImageFromBuffer.createGraphics();

        graphics2D.rotate(Math.toRadians(90), widthOfImage / 2, heightOfImage / 2);
        graphics2D.drawImage(imageToRotate, null, 0, 0);

        return newImageFromBuffer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Accueil = new javax.swing.JPanel();
        Principal = new javax.swing.JPanel();
        CritèreRecherchePannel = new javax.swing.JPanel();
        PanelListeEnsembleExamen = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ScrollTableau = new javax.swing.JScrollPane();
        Tableau = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        InfoPatient = new javax.swing.JPanel();
        NomPatient = new javax.swing.JLabel();
        PrenomPatient = new javax.swing.JLabel();
        TypeExamen = new javax.swing.JLabel();
        NomExamen = new javax.swing.JComboBox<String>();
        ChampNomPatient = new javax.swing.JTextField();
        ChampPrenomPatient = new javax.swing.JTextField();
        Rechercher = new javax.swing.JButton();
        idPatient = new javax.swing.JLabel();
        ChampIdPatient = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ConsulterDMR = new javax.swing.JButton();
        ConnecteEnTantQUE = new javax.swing.JLabel();
        NomPrenomUtilisateur = new javax.swing.JLabel();
        PanelListeEnsembleExamen1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        deconnexion = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        identifiantPro = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ListeEnsembleExamen = new javax.swing.JLabel();
        ConsulterExamen = new javax.swing.JPanel();
        PanelHaut1 = new javax.swing.JPanel();
        Retour2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Titre = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listeImage = new javax.swing.JList();
        jPanel11 = new javax.swing.JPanel();
        InfoPatient2 = new javax.swing.JPanel();
        Nom1 = new javax.swing.JLabel();
        Prenom1 = new javax.swing.JLabel();
        DateNaissance1 = new javax.swing.JLabel();
        Sexe1 = new javax.swing.JLabel();
        Adress1 = new javax.swing.JLabel();
        idPatient2 = new javax.swing.JLabel();
        ChampNom1 = new javax.swing.JLabel();
        ChampPrenom1 = new javax.swing.JLabel();
        ChampSexe1 = new javax.swing.JLabel();
        ChampAdresse = new javax.swing.JLabel();
        ChampDateNaissance = new javax.swing.JLabel();
        ChampIdPatient1 = new javax.swing.JLabel();
        InfoExamen1 = new javax.swing.JPanel();
        TypeExamen2 = new javax.swing.JLabel();
        ChampTypeExamen = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        ChampDate = new javax.swing.JFormattedTextField();
        PrenomPraticien = new javax.swing.JLabel();
        NomPraticien = new javax.swing.JLabel();
        ChampPrenomPraticien = new javax.swing.JLabel();
        ChampNomPraticien = new javax.swing.JLabel();
        idExamen = new javax.swing.JLabel();
        ChampIdExamen = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        AjoutImag = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        CR1 = new javax.swing.JLabel();
        CR2 = new javax.swing.JLabel();
        AjouterExamen = new javax.swing.JPanel();
        PanelPrincipal = new javax.swing.JPanel();
        PanelHaut = new javax.swing.JPanel();
        PanelBas = new javax.swing.JPanel();
        ImageExamen = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        ChoixImage = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        numArchivagenew = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        InfoPatient1 = new javax.swing.JPanel();
        ChampNom = new javax.swing.JLabel();
        ChampPrenom = new javax.swing.JLabel();
        ChampNaissance = new javax.swing.JLabel();
        ChampSexe = new javax.swing.JLabel();
        ChampAdress = new javax.swing.JLabel();
        ChampidPatient = new javax.swing.JLabel();
        Nom = new javax.swing.JLabel();
        Prenom = new javax.swing.JLabel();
        DateNaissance = new javax.swing.JLabel();
        Sexe = new javax.swing.JLabel();
        Adress = new javax.swing.JLabel();
        idPatient1 = new javax.swing.JLabel();
        InfoExamen = new javax.swing.JPanel();
        TypeExamen1 = new javax.swing.JLabel();
        ChoixExamen = new javax.swing.JComboBox<String>();
        jLabel12 = new javax.swing.JLabel();
        idEXAMEN = new javax.swing.JLabel();
        IDEXAMENJLABEL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DateExamen = new javax.swing.JLabel();
        PanelHaut3 = new javax.swing.JPanel();
        Retour1 = new javax.swing.JButton();
        TitreAjoutExamen = new javax.swing.JLabel();
        AjouterImage = new javax.swing.JPanel();
        PanelPrincipal2 = new javax.swing.JPanel();
        TraitementImage = new javax.swing.JPanel();
        Inverser = new javax.swing.JButton();
        RotationHoraire = new javax.swing.JButton();
        Reinitialiser = new javax.swing.JButton();
        NumArchivage = new javax.swing.JLabel();
        NumArchivageChamp = new javax.swing.JTextField();
        ImageATraiter = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Enregistrer1 = new javax.swing.JButton();
        Retour4 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        PanelHaut2 = new javax.swing.JPanel();
        Retour3 = new javax.swing.JButton();
        Panelmilieu = new javax.swing.JPanel();
        AjoutNewPatient = new javax.swing.JLabel();
        Panelmilieu1 = new javax.swing.JPanel();
        PanelBas1 = new javax.swing.JPanel();
        dmr = new javax.swing.JLabel();
        AjouterPatient = new javax.swing.JButton();
        MessageDMRtext = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        NomPatient1 = new javax.swing.JLabel();
        ChampNom2 = new javax.swing.JTextField();
        PrenomPatient1 = new javax.swing.JLabel();
        ChampPrenom2 = new javax.swing.JTextField();
        Adresse = new javax.swing.JLabel();
        ChampAdresse1 = new javax.swing.JTextField();
        CodePostal = new javax.swing.JLabel();
        ChampCodePostal = new javax.swing.JFormattedTextField();
        Ville = new javax.swing.JLabel();
        ChampVille = new javax.swing.JTextField();
        DateNaissa = new javax.swing.JLabel();
        DateNaissanceChamp = new javax.swing.JFormattedTextField();
        Sexe2 = new javax.swing.JLabel();
        Feminin = new javax.swing.JRadioButton();
        Masculin = new javax.swing.JRadioButton();
        Imprimer = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        ApercuAvantImpressionJPanel2 = new javax.swing.JPanel();
        ApercuAvantImpressionJPanel4 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        ApercuAvantImpression1 = new javax.swing.JLabel();
        Retour5 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Imprimer1 = new javax.swing.JButton();
        ENregistrer = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        ScrollPane1 = new javax.swing.JScrollPane();
        TexteApercu1 = new javax.swing.JTextPane();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1751, 1371));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1751, 1371));
        jTabbedPane1.setVerifyInputWhenFocusTarget(false);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTabbedPane1PropertyChange(evt);
            }
        });

        Accueil.setBackground(new java.awt.Color(255, 255, 255));

        Principal.setBackground(new java.awt.Color(255, 255, 255));

        CritèreRecherchePannel.setBackground(new java.awt.Color(255, 255, 255));

        PanelListeEnsembleExamen.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout PanelListeEnsembleExamenLayout = new javax.swing.GroupLayout(PanelListeEnsembleExamen);
        PanelListeEnsembleExamen.setLayout(PanelListeEnsembleExamenLayout);
        PanelListeEnsembleExamenLayout.setHorizontalGroup(
            PanelListeEnsembleExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelListeEnsembleExamenLayout.setVerticalGroup(
            PanelListeEnsembleExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        ScrollTableau.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true));
        ScrollTableau.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        Tableau.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tableau.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idPatient", "Nom patient", "Prénom patient", "Sexe", "Date de naissance", "idExamen", "Type d'examen", "Date examen", "Nom praticien", "Prénom praticien"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tableau.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Tableau.setRowHeight(20);
        Tableau.getTableHeader().setReorderingAllowed(false);
        Tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauMouseClicked(evt);
            }
        });
        ScrollTableau.setViewportView(Tableau);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ScrollTableau, javax.swing.GroupLayout.PREFERRED_SIZE, 1321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(ScrollTableau, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true), "Critères de recherche", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N
        InfoPatient.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        NomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPatient.setText("Nom patient: ");

        PrenomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPatient.setText("Prénom patient : ");

        TypeExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen.setText("Type d'examen: ");

        NomExamen.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        NomExamen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "  ", "Mammographie", "Echographie", "Scanner", "Radiographie", " " }));
        NomExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomExamenActionPerformed(evt);
            }
        });

        ChampNomPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChampNomPatientActionPerformed(evt);
            }
        });

        Rechercher.setBackground(new java.awt.Color(204, 255, 204));
        Rechercher.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Rechercher.setText("Rechercher");
        Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercherActionPerformed(evt);
            }
        });

        idPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient.setText("idPatient:");

        javax.swing.GroupLayout InfoPatientLayout = new javax.swing.GroupLayout(InfoPatient);
        InfoPatient.setLayout(InfoPatientLayout);
        InfoPatientLayout.setHorizontalGroup(
            InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addComponent(NomPatient)
                        .addGap(23, 23, 23)
                        .addComponent(ChampNomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InfoPatientLayout.createSequentialGroup()
                                .addComponent(TypeExamen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NomExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(InfoPatientLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Rechercher)
                                .addGap(26, 26, 26))))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(InfoPatientLayout.createSequentialGroup()
                                .addComponent(PrenomPatient)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampPrenomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InfoPatientLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(idPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ChampIdPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(577, 577, 577))))
        );
        InfoPatientLayout.setVerticalGroup(
            InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatientLayout.createSequentialGroup()
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomPatient)
                            .addComponent(ChampNomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TypeExamen)
                            .addComponent(NomExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7)
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrenomPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampPrenomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ChampIdPatient))
                        .addGap(30, 30, 30))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(Rechercher)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(412, 412, 412)
                .addComponent(InfoPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfoPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/AJOUTEREXAMEN.png"))); // NOI18N

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Ajouter un examen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ConsulterDMR.setBackground(new java.awt.Color(204, 255, 204));
        ConsulterDMR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConsulterDMR.setText("Consulter DMR");
        ConsulterDMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsulterDMRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabel6)
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConsulterDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(33, 33, 33)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConsulterDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CritèreRecherchePannelLayout = new javax.swing.GroupLayout(CritèreRecherchePannel);
        CritèreRecherchePannel.setLayout(CritèreRecherchePannelLayout);
        CritèreRecherchePannelLayout.setHorizontalGroup(
            CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addGap(1005, 1005, 1005)
                .addComponent(PanelListeEnsembleExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CritèreRecherchePannelLayout.setVerticalGroup(
            CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelListeEnsembleExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ConnecteEnTantQUE.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQUE.setText("Connecté en tant que :");

        NomPrenomUtilisateur.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NomPrenomUtilisateur.setText("Seuad Kassa");

        PanelListeEnsembleExamen1.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout PanelListeEnsembleExamen1Layout = new javax.swing.GroupLayout(PanelListeEnsembleExamen1);
        PanelListeEnsembleExamen1.setLayout(PanelListeEnsembleExamen1Layout);
        PanelListeEnsembleExamen1Layout.setHorizontalGroup(
            PanelListeEnsembleExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelListeEnsembleExamen1Layout.setVerticalGroup(
            PanelListeEnsembleExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        deconnexion.setBackground(new java.awt.Color(204, 255, 204));
        deconnexion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        deconnexion.setText("Déconnexion");
        deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        identifiantPro.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        identifiantPro.setText("0000000000");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Identifiant :");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        ListeEnsembleExamen.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ListeEnsembleExamen.setForeground(new java.awt.Color(255, 51, 0));
        ListeEnsembleExamen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ListeEnsembleExamen.setText("Liste de l'ensemble des examens");
        ListeEnsembleExamen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(608, 608, 608)
                .addComponent(ListeEnsembleExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ListeEnsembleExamen)
                .addContainerGap())
        );

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelListeEnsembleExamen1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(identifiantPro, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deconnexion)
                        .addGap(89, 89, 89))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGap(1157, 1157, 1157)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(ConnecteEnTantQUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NomPrenomUtilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addComponent(CritèreRecherchePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deconnexion)
                        .addGap(23, 23, 23))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConnecteEnTantQUE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(NomPrenomUtilisateur)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(identifiantPro))
                        .addGap(18, 18, 18)))
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(PanelListeEnsembleExamen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(CritèreRecherchePannel, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AccueilLayout = new javax.swing.GroupLayout(Accueil);
        Accueil.setLayout(AccueilLayout);
        AccueilLayout.setHorizontalGroup(
            AccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AccueilLayout.setVerticalGroup(
            AccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccueilLayout.createSequentialGroup()
                .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(379, 379, 379))
        );

        jTabbedPane1.addTab("Accueil", Accueil);

        ConsulterExamen.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut1.setBackground(new java.awt.Color(255, 255, 255));

        Retour2.setBackground(new java.awt.Color(204, 255, 204));
        Retour2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour2.setText("Retour");
        Retour2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 51, 0));
        jPanel4.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        Titre.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Titre.setForeground(new java.awt.Color(255, 51, 0));
        Titre.setText("Consulter Examen");
        Titre.setToolTipText("");
        Titre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel7.setBackground(new java.awt.Color(255, 51, 0));
        jPanel7.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelHaut1Layout = new javax.swing.GroupLayout(PanelHaut1);
        PanelHaut1.setLayout(PanelHaut1Layout);
        PanelHaut1Layout.setHorizontalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHaut1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHaut1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Titre, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(673, 673, 673))
        );
        PanelHaut1Layout.setVerticalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHaut1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(Retour2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Titre)
                .addGap(16, 16, 16)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        listeImage.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        listeImage.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listeImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listeImageMouseClicked(evt);
            }
        });
        listeImage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listeImageKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(listeImage);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true), "Informations Patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Nom1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nom1.setText("Nom :");

        Prenom1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Prenom1.setText("Prénom :");

        DateNaissance1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissance1.setText("Date de naissance :");

        Sexe1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe1.setText("Sexe :");

        Adress1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adress1.setText("Adresse :");

        idPatient2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient2.setText("idPatient :");

        ChampNom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNom1.setText("NomPatient");

        ChampPrenom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenom1.setText("PrénomPatient");

        ChampSexe1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampSexe1.setText("Féminin");

        ChampAdresse.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampAdresse.setText("3 rue des Violettes 38000 Grenoble");

        ChampDateNaissance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampDateNaissance.setText("jLabel1");

        ChampIdPatient1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampIdPatient1.setText("idPatient");

        javax.swing.GroupLayout InfoPatient2Layout = new javax.swing.GroupLayout(InfoPatient2);
        InfoPatient2.setLayout(InfoPatient2Layout);
        InfoPatient2Layout.setHorizontalGroup(
            InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addComponent(DateNaissance1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addComponent(Nom1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampNom1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addComponent(Prenom1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampPrenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Sexe1)
                    .addComponent(idPatient2)
                    .addComponent(Adress1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChampIdPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampSexe1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        InfoPatient2Layout.setVerticalGroup(
            InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nom1)
                            .addComponent(Sexe1)
                            .addComponent(ChampNom1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ChampSexe1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Adress1)
                    .addComponent(ChampPrenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DateNaissance1)
                        .addComponent(ChampDateNaissance))
                    .addComponent(idPatient2)
                    .addComponent(ChampIdPatient1))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        InfoExamen1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true), "Informations examen", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        TypeExamen2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen2.setText("Type d'examen :");

        ChampTypeExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampTypeExamen.setText("Radio");

        Date.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Date.setText("Date :");

        ChampDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChampDateActionPerformed(evt);
            }
        });

        PrenomPraticien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPraticien.setText("Prénom praticien :");

        NomPraticien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPraticien.setText("Nom praticien :");

        ChampPrenomPraticien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenomPraticien.setText("Prénom praticien");

        ChampNomPraticien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNomPraticien.setText("Nom praticien");

        idExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idExamen.setText("idExamen :");

        ChampIdExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampIdExamen.setText("idExamen");

        javax.swing.GroupLayout InfoExamen1Layout = new javax.swing.GroupLayout(InfoExamen1);
        InfoExamen1.setLayout(InfoExamen1Layout);
        InfoExamen1Layout.setHorizontalGroup(
            InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamen1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampDate, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(TypeExamen2)
                        .addGap(8, 8, 8)
                        .addComponent(ChampTypeExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampIdExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)))
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoExamen1Layout.createSequentialGroup()
                        .addComponent(NomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampNomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoExamen1Layout.createSequentialGroup()
                        .addComponent(PrenomPraticien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChampPrenomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        InfoExamen1Layout.setVerticalGroup(
            InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamen1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeExamen2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampTypeExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PrenomPraticien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampPrenomPraticien)
                    .addComponent(idExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampIdExamen))
                .addGap(18, 18, 18)
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date)
                    .addComponent(ChampDate)
                    .addComponent(NomPraticien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampNomPraticien))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(InfoPatient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(InfoExamen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(InfoExamen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InfoPatient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        AjoutImag.setBackground(new java.awt.Color(255, 255, 204));
        AjoutImag.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AjoutImag.setText("Ajouter image numérisée");
        AjoutImag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutImagActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/COMPTERENDU.png"))); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(AjoutImag))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel5)))
                .addGap(90, 90, 90))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(AjoutImag, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(48, 48, 48))
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        CR1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CR1.setForeground(new java.awt.Color(255, 51, 0));
        CR1.setText("Compte-rendu");

        CR2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CR2.setForeground(new java.awt.Color(255, 51, 0));
        CR2.setText("Liste des images");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(412, 412, 412)
                .addComponent(CR1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CR2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(340, 340, 340))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CR1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CR2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout ConsulterExamenLayout = new javax.swing.GroupLayout(ConsulterExamen);
        ConsulterExamen.setLayout(ConsulterExamenLayout);
        ConsulterExamenLayout.setHorizontalGroup(
            ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ConsulterExamenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ConsulterExamenLayout.setVerticalGroup(
            ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsulterExamenLayout.createSequentialGroup()
                .addComponent(PanelHaut1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsulterExamenLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConsulterExamenLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConsulterExamenLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulter un examen", ConsulterExamen);

        AjouterExamen.setBackground(new java.awt.Color(255, 255, 255));

        PanelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        PanelPrincipal.setPreferredSize(new java.awt.Dimension(1779, 1648));

        PanelHaut.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHautLayout = new javax.swing.GroupLayout(PanelHaut);
        PanelHaut.setLayout(PanelHautLayout);
        PanelHautLayout.setHorizontalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHautLayout.setVerticalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        PanelBas.setBackground(new java.awt.Color(255, 255, 255));
        PanelBas.setPreferredSize(new java.awt.Dimension(1751, 1371));

        ImageExamen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ImageExamenMouseClicked(evt);
            }
        });

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        ChoixImage.setBackground(new java.awt.Color(204, 255, 204));
        ChoixImage.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ChoixImage.setText("Ajouter image numérisée");
        ChoixImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoixImageActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ajoutexamen.png"))); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(772, 772, 772)
                .addComponent(ChoixImage, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(806, 806, 806))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(47, 47, 47)
                .addComponent(ChoixImage, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        numArchivagenew.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        numArchivagenew.setText("numArchivagenew");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numArchivagenew)
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(numArchivagenew)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true), "Informations patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        ChampNom.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNom.setText("PIKACHU");

        ChampPrenom.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenom.setText("Seuad");

        ChampNaissance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNaissance.setText("jLabel6");

        ChampSexe.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampSexe.setText("M");

        ChampAdress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampAdress.setText("12 rue du pont des fleurs");

        ChampidPatient.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampidPatient.setText("1111111111");

        Nom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nom.setText("Nom:");

        Prenom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Prenom.setText("Prénom:");

        DateNaissance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissance.setText("Date de naissance:");

        Sexe.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe.setText("Sexe:");

        Adress.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adress.setText("Adresse:");

        idPatient1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient1.setText("idPatient:");

        javax.swing.GroupLayout InfoPatient1Layout = new javax.swing.GroupLayout(InfoPatient1);
        InfoPatient1.setLayout(InfoPatient1Layout);
        InfoPatient1Layout.setHorizontalGroup(
            InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient1Layout.createSequentialGroup()
                        .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InfoPatient1Layout.createSequentialGroup()
                                .addComponent(Adress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InfoPatient1Layout.createSequentialGroup()
                                .addComponent(Prenom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(DateNaissance)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(InfoPatient1Layout.createSequentialGroup()
                        .addComponent(Nom, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampNom, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(Sexe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampSexe, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(idPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChampidPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        InfoPatient1Layout.setVerticalGroup(
            InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampSexe)
                    .addComponent(Nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Sexe)
                    .addComponent(ChampidPatient)
                    .addComponent(ChampNom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idPatient1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prenom)
                    .addComponent(ChampPrenom)
                    .addComponent(DateNaissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampNaissance))
                .addGap(18, 18, 18)
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        InfoExamen.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true), "Informations examen", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        TypeExamen1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen1.setText("Type d'examen :");

        ChoixExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ChoixExamen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Radiographie", "Mammographie", "Scanner", "IRM", " " }));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Date :");

        idEXAMEN.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idEXAMEN.setText("idExamen :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("0000000000");

        DateExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DateExamen.setText("ddd");

        javax.swing.GroupLayout InfoExamenLayout = new javax.swing.GroupLayout(InfoExamen);
        InfoExamen.setLayout(InfoExamenLayout);
        InfoExamenLayout.setHorizontalGroup(
            InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamenLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(idEXAMEN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addComponent(DateExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(InfoExamenLayout.createSequentialGroup()
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IDEXAMENJLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TypeExamen1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChoixExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(330, Short.MAX_VALUE))
        );
        InfoExamenLayout.setVerticalGroup(
            InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeExamen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChoixExamen))
                .addGap(18, 18, 18)
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(DateExamen))
                .addGap(14, 14, 14)
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idEXAMEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IDEXAMENJLABEL)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(InfoPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addComponent(InfoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InfoPatient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InfoExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        PanelHaut3.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHaut3Layout = new javax.swing.GroupLayout(PanelHaut3);
        PanelHaut3.setLayout(PanelHaut3Layout);
        PanelHaut3Layout.setHorizontalGroup(
            PanelHaut3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHaut3Layout.setVerticalGroup(
            PanelHaut3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelBasLayout = new javax.swing.GroupLayout(PanelBas);
        PanelBas.setLayout(PanelBasLayout);
        PanelBasLayout.setHorizontalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addComponent(ImageExamen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBasLayout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(PanelHaut3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelBasLayout.setVerticalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addComponent(PanelHaut3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBasLayout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(558, Short.MAX_VALUE))
                    .addGroup(PanelBasLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(ImageExamen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))))
        );

        Retour1.setBackground(new java.awt.Color(204, 255, 204));
        Retour1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour1.setText("Retour");
        Retour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour1ActionPerformed(evt);
            }
        });

        TitreAjoutExamen.setBackground(new java.awt.Color(255, 255, 255));
        TitreAjoutExamen.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TitreAjoutExamen.setForeground(new java.awt.Color(255, 51, 0));
        TitreAjoutExamen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitreAjoutExamen.setText("Ajout d'un nouvel examen");
        TitreAjoutExamen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBas, javax.swing.GroupLayout.DEFAULT_SIZE, 1746, Short.MAX_VALUE)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addComponent(TitreAjoutExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelHaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(TitreAjoutExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelBas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AjouterExamenLayout = new javax.swing.GroupLayout(AjouterExamen);
        AjouterExamen.setLayout(AjouterExamenLayout);
        AjouterExamenLayout.setHorizontalGroup(
            AjouterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 1746, Short.MAX_VALUE)
        );
        AjouterExamenLayout.setVerticalGroup(
            AjouterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AjouterExamenLayout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ajouter un examen", AjouterExamen);

        PanelPrincipal2.setBackground(new java.awt.Color(255, 255, 255));

        TraitementImage.setBackground(new java.awt.Color(255, 255, 255));
        TraitementImage.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 1, true), "Traitement d'image", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        Inverser.setBackground(new java.awt.Color(255, 255, 204));
        Inverser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Inverser.setText("Inverser");
        Inverser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InverserActionPerformed(evt);
            }
        });

        RotationHoraire.setBackground(new java.awt.Color(255, 255, 204));
        RotationHoraire.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        RotationHoraire.setText("Rotation 90° ");
        RotationHoraire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotationHoraireActionPerformed(evt);
            }
        });

        Reinitialiser.setBackground(new java.awt.Color(255, 255, 204));
        Reinitialiser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Reinitialiser.setText("Réinitialiser");
        Reinitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReinitialiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TraitementImageLayout = new javax.swing.GroupLayout(TraitementImage);
        TraitementImage.setLayout(TraitementImageLayout);
        TraitementImageLayout.setHorizontalGroup(
            TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TraitementImageLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RotationHoraire, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(Inverser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TraitementImageLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Reinitialiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        TraitementImageLayout.setVerticalGroup(
            TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TraitementImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Inverser, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(86, 86, 86)
                .addComponent(RotationHoraire, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(84, 84, 84)
                .addComponent(Reinitialiser, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        NumArchivage.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NumArchivage.setText("Numéro d'archivage : ");

        NumArchivageChamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumArchivageChampActionPerformed(evt);
            }
        });

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/radio.png"))); // NOI18N

        Enregistrer1.setBackground(new java.awt.Color(204, 255, 204));
        Enregistrer1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Enregistrer1.setText("Enregistrer");
        Enregistrer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Enregistrer1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Enregistrer1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Enregistrer1)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Retour4.setBackground(new java.awt.Color(204, 255, 204));
        Retour4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour4.setText("Retour");
        Retour4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPrincipal2Layout = new javax.swing.GroupLayout(PanelPrincipal2);
        PanelPrincipal2.setLayout(PanelPrincipal2Layout);
        PanelPrincipal2Layout.setHorizontalGroup(
            PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(TraitementImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(283, 283, 283)
                        .addComponent(ImageATraiter)
                        .addGap(400, 400, 400))
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(NumArchivage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NumArchivageChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Retour4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        PanelPrincipal2Layout.setVerticalGroup(
            PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumArchivage)
                            .addComponent(NumArchivageChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Retour4)))
                .addGap(64, 64, 64)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(ImageATraiter))
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TraitementImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AjouterImageLayout = new javax.swing.GroupLayout(AjouterImage);
        AjouterImage.setLayout(AjouterImageLayout);
        AjouterImageLayout.setHorizontalGroup(
            AjouterImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AjouterImageLayout.setVerticalGroup(
            AjouterImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ajouter une image", AjouterImage);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut2.setBackground(new java.awt.Color(255, 255, 255));

        Retour3.setBackground(new java.awt.Color(204, 255, 204));
        Retour3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour3.setText("Retour");
        Retour3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour3ActionPerformed(evt);
            }
        });

        Panelmilieu.setBackground(new java.awt.Color(255, 102, 0));
        Panelmilieu.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        javax.swing.GroupLayout PanelmilieuLayout = new javax.swing.GroupLayout(Panelmilieu);
        Panelmilieu.setLayout(PanelmilieuLayout);
        PanelmilieuLayout.setHorizontalGroup(
            PanelmilieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelmilieuLayout.setVerticalGroup(
            PanelmilieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        AjoutNewPatient.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        AjoutNewPatient.setForeground(new java.awt.Color(255, 51, 0));
        AjoutNewPatient.setText("Ajout d'un nouveau patient");

        Panelmilieu1.setBackground(new java.awt.Color(255, 102, 0));
        Panelmilieu1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        javax.swing.GroupLayout Panelmilieu1Layout = new javax.swing.GroupLayout(Panelmilieu1);
        Panelmilieu1.setLayout(Panelmilieu1Layout);
        Panelmilieu1Layout.setHorizontalGroup(
            Panelmilieu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Panelmilieu1Layout.setVerticalGroup(
            Panelmilieu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 7, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelHaut2Layout = new javax.swing.GroupLayout(PanelHaut2);
        PanelHaut2.setLayout(PanelHaut2Layout);
        PanelHaut2Layout.setHorizontalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHaut2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addComponent(Panelmilieu1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Panelmilieu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelHaut2Layout.createSequentialGroup()
                .addGap(542, 542, 542)
                .addComponent(AjoutNewPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(719, Short.MAX_VALUE))
        );
        PanelHaut2Layout.setVerticalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHaut2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Panelmilieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AjoutNewPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Panelmilieu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelBas1.setBackground(new java.awt.Color(255, 255, 255));

        dmr.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        dmr.setForeground(new java.awt.Color(255, 0, 0));
        dmr.setText("DMR");
        dmr.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        AjouterPatient.setBackground(new java.awt.Color(153, 255, 153));
        AjouterPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        AjouterPatient.setText("Enregistrer patient");
        AjouterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterPatientActionPerformed(evt);
            }
        });

        MessageDMRtext.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        MessageDMRtext.setText("Un DMR est directement créé lors de l'ajout d'un nouveau patient dans le SIR");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PATIENT AJOUT.jpg"))); // NOI18N

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        NomPatient1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPatient1.setText("Nom    :");

        PrenomPatient1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPatient1.setText("Prénom :");

        Adresse.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adresse.setText("Adresse :");

        ChampAdresse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChampAdresse1ActionPerformed(evt);
            }
        });

        CodePostal.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        CodePostal.setText("Code Postal : ");

        try {
            ChampCodePostal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        Ville.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Ville.setText("Ville :");

        DateNaissa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissa.setText("Date de naissance :");

        DateNaissanceChamp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/mm/yyyy"))));
        DateNaissanceChamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateNaissanceChampActionPerformed(evt);
            }
        });

        Sexe2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe2.setText("Sexe");

        Feminin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Feminin.setText("Féminin");

        Masculin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Masculin.setText("Masculin");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(NomPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampNom2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127)
                                .addComponent(Sexe2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Feminin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Masculin))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(PrenomPatient1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampPrenom2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(CodePostal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampCodePostal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 53, Short.MAX_VALUE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(Ville)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampVille, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(Adresse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampAdresse1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(DateNaissa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DateNaissanceChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChampNom2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Sexe2)
                            .addComponent(Feminin)
                            .addComponent(Masculin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(NomPatient1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PrenomPatient1)
                            .addComponent(ChampPrenom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DateNaissa)
                            .addComponent(DateNaissanceChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Adresse)
                            .addComponent(ChampAdresse1))
                        .addGap(24, 24, 24)))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CodePostal, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(ChampCodePostal))
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ville, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(446, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(245, 245, 245))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelBas1Layout = new javax.swing.GroupLayout(PanelBas1);
        PanelBas1.setLayout(PanelBas1Layout);
        PanelBas1Layout.setHorizontalGroup(
            PanelBas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBas1Layout.createSequentialGroup()
                .addGroup(PanelBas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBas1Layout.createSequentialGroup()
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(PanelBas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AjouterPatient)
                            .addComponent(jLabel10)))
                    .addGroup(PanelBas1Layout.createSequentialGroup()
                        .addGap(692, 692, 692)
                        .addComponent(dmr, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBas1Layout.createSequentialGroup()
                        .addGap(463, 463, 463)
                        .addComponent(MessageDMRtext, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(239, Short.MAX_VALUE))
        );
        PanelBas1Layout.setVerticalGroup(
            PanelBas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBas1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dmr, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelBas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBas1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel10)
                        .addGap(133, 133, 133)
                        .addComponent(AjouterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBas1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MessageDMRtext, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBas1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(PanelHaut2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelBas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1021, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ajouter un patient", jPanel19);

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        ApercuAvantImpressionJPanel2.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel2Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel2);
        ApercuAvantImpressionJPanel2.setLayout(ApercuAvantImpressionJPanel2Layout);
        ApercuAvantImpressionJPanel2Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel2Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ApercuAvantImpressionJPanel4.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel4Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel4);
        ApercuAvantImpressionJPanel4.setLayout(ApercuAvantImpressionJPanel4Layout);
        ApercuAvantImpressionJPanel4Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1771, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel4Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        ApercuAvantImpression1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ApercuAvantImpression1.setForeground(new java.awt.Color(255, 51, 0));
        ApercuAvantImpression1.setText("Impression DMR");
        ApercuAvantImpression1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(720, 720, 720)
                .addComponent(ApercuAvantImpression1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ApercuAvantImpression1)
                .addContainerGap())
        );

        Retour5.setBackground(new java.awt.Color(204, 255, 204));
        Retour5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour5.setText("Retour");
        Retour5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour5ActionPerformed(evt);
            }
        });

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IMPRIMER.png"))); // NOI18N

        Imprimer1.setBackground(new java.awt.Color(204, 255, 204));
        Imprimer1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Imprimer1.setText("Imprimer");
        Imprimer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimer1ActionPerformed(evt);
            }
        });

        ENregistrer.setBackground(new java.awt.Color(204, 255, 204));
        ENregistrer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ENregistrer.setText("Enregistrer");
        ENregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ENregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Imprimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7))
                    .addComponent(ENregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel7)
                .addGap(51, 51, 51)
                .addComponent(Imprimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(ENregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));

        ScrollPane1.setViewportView(TexteApercu1);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(551, Short.MAX_VALUE)
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ApercuAvantImpressionJPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ApercuAvantImpressionJPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(842, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ImprimerLayout = new javax.swing.GroupLayout(Imprimer);
        Imprimer.setLayout(ImprimerLayout);
        ImprimerLayout.setHorizontalGroup(
            ImprimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ImprimerLayout.setVerticalGroup(
            ImprimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Impression", Imprimer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumArchivageChampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumArchivageChampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumArchivageChampActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (ChampIdPatient.getText().equals("") || ChampPrenomPatient.getText().equals("") || ChampNomPatient.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Remplissez les champ idPatient, nom et prénom");
            System.out.println(ChampIdPatient.equals(null));
        } else {
            String nom = ChampNomPatient.getText();
            String prenom = ChampPrenomPatient.getText();
            String idP = ChampIdPatient.getText();
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                if (pbd.rechIdPatients(idP, nom, prenom)) {
                    jTabbedPane1.setSelectedIndex(2);
                    ChampNom.setText(nom);//On remplit le champ nom
                    ChampPrenom.setText(prenom);//On remplit le champ prennom
                    ChampidPatient.setText(idP);//On remplit le champ identifiant patient
                    ChampAdress.setText(pbd.recupAdresse(idP));//on recherche l'adresse correspondate à l'identifiant patient
                    ChampNaissance.setText(pbd.recupDateN(idP).toString());
                    ChampSexe.setText(pbd.recupSexe(idP));
                    System.out.println(pbd.recupSexe(idP));
                    //Création d'un format timestamp avec la date du système
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    String date = dtf.format(LocalDateTime.now());
                    System.out.println("yyyy-MM-dd HH:mm:ss-> " + date);
                    DateExamen.setText(date);//on remplit le champ date examen

                    ExamenBD exam = null;
                    try {
                        exam = new ExamenBD();
                    } catch (SQLException ex) {
                        Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String idExam = null;
                    try {
                        idExam = exam.GenererIdEXam();
                        jLabel2.setText(idExam);
                        exam.insererExamen(idExam, idP, identifiantPro.getText(), ChoixExamen.getSelectedItem().toString(), "", date, 0);
                        System.out.println("exam inséré sa mère");
                    } catch (SQLException ex) {
                        Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Ce patient n'existe pas");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexionActionPerformed
        Connexion a = new Connexion();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deconnexionActionPerformed

    private void RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercherActionPerformed
              String nomPat = ChampNomPatient.getText().toUpperCase();
        String prenomPat = ChampPrenomPatient.getText();
        String idPat = ChampIdPatient.getText().toString();
        String type = NomExamen.getSelectedItem().toString();

        //Recherche par nom et prenom du patient
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (idPat.equals("")) && (type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();

            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                liste = exam.rechExamNomPrenom(prenomPat, nomPat, liste);
                System.out.println(liste);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);
            Tableau.repaint();

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }

        //Recherche par nom prenom id
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (!idPat.equals("")) && (type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                liste = exam.rechExamNomPrenomId(idPat, prenomPat, nomPat, liste);
                System.out.println(liste);

            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(prenomPat);
            Tableau.setModel(liste);
            Tableau.repaint();
            System.out.println(prenomPat);

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }

        //Recherche par nom prenom id type
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (!idPat.equals("")) && (!type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                //liste= exam.rechExamNomPrenomIdType(idPat,prenomPat, nomPat,type, liste);
                liste = exam.rechExamNomPrenomIdType(idPat, prenomPat, nomPat, type, liste);
                System.out.println("nom prenom id type " + liste);
                System.out.println(liste);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);
            Tableau.repaint();

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }
    }//GEN-LAST:event_RechercherActionPerformed

    private void Retour4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Retour4ActionPerformed

    private void ChampDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChampDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChampDateActionPerformed

    private void Retour2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Retour2ActionPerformed

    private void InverserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InverserActionPerformed
        // Flip the ImageBD horizontally
        Icon icon = ImageATraiter.getIcon();
        /*BufferedImage*/ image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);

        AffineTransform tx = AffineTransform.getScaleInstance(-1, 1);
        tx.translate(-image.getWidth(null), 0);
        AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        image = op.filter(image, null);

        ImageIcon Newicon = new ImageIcon(image);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_InverserActionPerformed

    private void RotationHoraireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotationHoraireActionPerformed
        Icon icon = ImageATraiter.getIcon();
        /*BufferedImage*/ image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);
        /*BufferedImage imagePivote*/ image = rotateImage(image);

        ImageIcon Newicon = new ImageIcon(image/*Pivote*/);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_RotationHoraireActionPerformed

    private void TableauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauMouseClicked
        if (evt.getClickCount() == 2) { // détection du double clique
            JTable cible = (JTable) evt.getSource();
            int ligne = cible.getSelectedRow(); //ligne du tableau sélectionnée.
            int col = Tableau.getColumnCount();
            //System.out.println(col);
            String idPat = Tableau.getValueAt(ligne, col - 10).toString();
            String nomPat = Tableau.getValueAt(ligne, col - 9).toString();
            String prenomPat = Tableau.getValueAt(ligne, col - 8).toString();
            String sexe = Tableau.getValueAt(ligne, col - 7).toString();
            String dateN = Tableau.getValueAt(ligne, col - 6).toString();
            String idExam = Tableau.getValueAt(ligne, col - 5).toString();
            String type = Tableau.getValueAt(ligne, col - 4).toString();
            String dateE = Tableau.getValueAt(ligne, col - 3).toString();
            String nomPro = Tableau.getValueAt(ligne, col - 2).toString();
            String prenomPro = Tableau.getValueAt(ligne, col - 1).toString();

            jTabbedPane1.setSelectedIndex(1);
            ChampNom1.setText(nomPat);
            ChampPrenom1.setText(prenomPat);
            ChampSexe1.setText(sexe);
            //ChampAdresse
            ChampDateNaissance.setText(dateN);
            ChampIdPatient1.setText(idPat);
            ChampTypeExamen.setText(type);
            ChampDate.setText(dateE);
            ChampPrenomPraticien.setText(prenomPro);
            ChampNomPraticien.setText(nomPro);
            ChampIdExamen.setText(idExam);

            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                ChampAdresse.setText(pbd.recupAdresse(idPat));
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            ExamenBD exam = null;
            String compteRendu = "";
            try {
                exam = new ExamenBD();

                //JOptionPane.showMessageDialog(null, prenomPro);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                compteRendu = exam.recupContenuCR1(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextArea2.setText(compteRendu);
            jTextArea2.repaint();

            //liste des images de l'examen
            ImageBD i = null;
            i = new ImageBD();
            DefaultListModel l = null;
            try {
                l = i.listImage(ChampIdExamen.getText());
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            listeImage.setModel(l);

        }
    }//GEN-LAST:event_TableauMouseClicked

    private void listeImageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listeImageKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeImageKeyPressed

    private void listeImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listeImageMouseClicked
        if (evt.getClickCount() == 1) {
            String numString = listeImage.getSelectedValue().toString();
            System.out.println("num " + numString);
            int num = Integer.parseInt(numString);

            ImageBD i = null;
            i = new ImageBD();
            InputStream image = null;
            try {
                image = i.recupImage(num);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedImage imageAffichage = null;
            try {
                imageAffichage = ImageIO.read(image);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //ouverture de l'image sélectionnée
            JDialog d = new JDialog(this, "Image sélectionnée");
            d.setSize(300, 300);

            JLabel l = new JLabel("Ceci est une boite de dialogue.");
            // Ajouter l'étiquette à la boîte de dialogue 
            d.add(l);
            d.setLocation(650, 400);

            JLabel label = new JLabel(new ImageIcon(imageAffichage));
            d.add(label);

            d.setVisible(true);

        }
    }//GEN-LAST:event_listeImageMouseClicked

    private void jTabbedPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1PropertyChange

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        ExamenBD exam = null;
        
        try {
            exam = new ExamenBD();
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        try {
            liste = exam.listeExam(liste);
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);

        Tableau.repaint();
        ChampNomPatient.setText("");
        ChampPrenomPatient.setText("");
        ChampIdPatient.setText("");
        NomExamen.setSelectedIndex(0);
       
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void NomExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomExamenActionPerformed


    }//GEN-LAST:event_NomExamenActionPerformed

    private void ChoixImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoixImageActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File("./src/jpg"));

        //filtrer les fichiers
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);

        //si l'utilisateur clique sur enregistrer dans Jfilechooser
        if (res == JFileChooser.APPROVE_OPTION) {
            this.selFile = file.getSelectedFile();

            FileInputStream input = null;
            try {
                input = new FileInputStream(selFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);

            }
            BdConnection bd = null;
            try {
                bd = new BdConnection();

            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //connexion
            Connection conn = bd.getConnexion();

            //création d'un identifiant pacs
            IdPacs idImage = null;
            try {
                idImage = new IdPacs(conn);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //affichage de l'idPacs
            numArchivagenew.setText(Integer.toString(idImage.getIdPacs()));

            String path = selFile.getAbsolutePath();

            try {
                image = ImageIO.read(selFile);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'image sélectionnée
            ImageExamen.setIcon(new ImageIcon(image));

            ImageExamen.setVisible(false);
            jTabbedPane1.setSelectedIndex(3);
            NumArchivageChamp.setText(numArchivagenew.getText());
            Icon imageAff = ImageExamen.getIcon();
            ImageATraiter.setIcon(imageAff);
        }

    }//GEN-LAST:event_ChoixImageActionPerformed

    private void ImageExamenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageExamenMouseClicked

        Icon imageAff = ImageExamen.getIcon();
        ImageATraiter.setIcon(imageAff);
    }//GEN-LAST:event_ImageExamenMouseClicked

    private void Retour3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour3ActionPerformed

        jTabbedPane1.setSelectedIndex(0);
                ExamenBD exam=null;
        try {
            exam = new ExamenBD();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        try {
            liste = exam.listeExam(liste);
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);
        Tableau.setDefaultEditor(Object.class, null);
        Tableau.repaint();
    }//GEN-LAST:event_Retour3ActionPerformed

    private void ChampAdresse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChampAdresse1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChampAdresse1ActionPerformed

    private void AjouterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterPatientActionPerformed
        String nom = ChampNom2.getText().toUpperCase();
        String prenom = ChampPrenom2.getText();
        String adresse = ChampAdresse1.getText() + ", " + ChampCodePostal.getText() + " " + ChampVille.getText();
        String date = DateNaissanceChamp.getText();
        Genre genre = null;
        if (Feminin.isSelected()) {
            genre = Genre.F;
        }
        if (Masculin.isSelected()) {
            genre = Genre.M;
        }
        if (nom.equals("") || prenom.equals("") || adresse.equals("") || date.equals("") || genre == null) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tout les champs");
        } else {
            try {
                PatientsBD pbd = new PatientsBD();
                pbd.insererUnPatient(nom, prenom, adresse, genre.toString(), date);
                JOptionPane.showMessageDialog(this, "Patient ajouté au SIR");
                ChampNom.setText("");
                ChampPrenom.setText("");
                ChampAdresse.setText("");
                ChampCodePostal.setText("");
                ChampVille.setText("");
                DateNaissanceChamp.setText("");

                PatientsBD pbd1 = new PatientsBD();
                DefaultTableModel liste = new DefaultTableModel();
                liste.addColumn("ID");
                liste.addColumn("Nom");
                liste.addColumn("Prénom");
                liste.addColumn("Sexe");
                liste.addColumn("Date de Naissance");
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd1.listePatientModel(liste);
                Tableau.setModel(liste);

                Tableau.repaint();
            } catch (SQLException ex) {
                //Logger.getLogger(AjouterPatient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_AjouterPatientActionPerformed

    private void DateNaissanceChampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateNaissanceChampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateNaissanceChampActionPerformed

    private void AjoutImagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutImagActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File("./src/jpg"));

        //filtrer les fichiers
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);

        //si l'utilisateur clique sur enregistrer dans Jfilechooser
        if (res == JFileChooser.APPROVE_OPTION) {
            this.selFile = file.getSelectedFile();

            FileInputStream input = null;
            try {
                input = new FileInputStream(selFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);

            }
            BdConnection bd = null;
            try {
                bd = new BdConnection();

            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //connexion
            Connection conn = bd.getConnexion();

            //création d'un identifiant pacs
            IdPacs idImage = null;
            try {
                idImage = new IdPacs(conn);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //affichage de l'idPacs
            numArchivagenew.setText(Integer.toString(idImage.getIdPacs()));

            String path = selFile.getAbsolutePath();

            try {
                image = ImageIO.read(selFile);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'image sélectionnée
            ImageExamen.setIcon(new ImageIcon(image));

            ImageExamen.setVisible(false);
            jTabbedPane1.setSelectedIndex(3);
            NumArchivageChamp.setText(numArchivagenew.getText());
            Icon imageAff = ImageExamen.getIcon();
            ImageATraiter.setIcon(imageAff);
        }

    }//GEN-LAST:event_AjoutImagActionPerformed

    private void ConsulterDMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsulterDMRActionPerformed
        if (ChampIdPatient.getText().equals("") || ChampPrenomPatient.getText().equals("") || ChampNomPatient.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Remplissez les champ idPatient, nom et prénom");
            System.out.println(ChampIdPatient.equals(null));
        } else {
            int nbligne = Tableau.getRowCount();

            int col = Tableau.getColumnCount();//nombre de colonnes
            String nomP = ChampNomPatient.getText();
            String prenomP = ChampPrenomPatient.getText();
            String idPat = ChampIdPatient.getText();
            String sexe = Tableau.getValueAt(0, col - 7).toString();
            String dateN = Tableau.getValueAt(0, col - 6).toString();

            String titre = "";

            if (sexe.equals('M')) {
                titre = "Monsieur";
            } else {
                titre = "Madame";
            }

            String DMR = "";
            DMR += "DMR de " + titre + " " + prenomP + " " + nomP + "\n" + "Identifiant du patient : " + idPat + "\n" + "Date de naissance : " + dateN + "\n";
            DMR += "_______________________________________________________________________________________" + "\n" + "\n";
            //On récupère les infos des examens qui sont dans le tableau
            for (int ligne = 0; ligne < nbligne; ligne++) {
                String idExam = Tableau.getValueAt(ligne, col - 5).toString();

                String type = Tableau.getValueAt(ligne, col - 4).toString();
                String prenomPro = Tableau.getValueAt(ligne, col - 1).toString();
                String nomPro = Tableau.getValueAt(ligne, col - 2).toString();
                String dateE = Tableau.getValueAt(ligne, col - 3).toString();

                //On récupère la date de l'examen et le cr et les numéro d'archivages
                ExamenBD ebd = null;

                String dateFormat = "";
                String cr = "";
                String listeNumeros = "";

                /*Date date=new Date(dateE);

                 SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd hh:mm");
                 dateFormat = formater.format(date);*/
                try {
                    ebd = new ExamenBD();
                    cr = ebd.recupContenuCR1(idExam);
                } catch (SQLException ex) {
                    Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                    listeNumeros = ebd.recupNumeroArchivage(idExam);
                } catch (SQLException ex) {
                    Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                }

                DMR += "Examen " + (ligne + 1) + "\n";
                DMR += "Date de l'examen : " + dateE + "\n";
                DMR += "Identifiant de l'examen : " + idExam + "\n" + "Type : " + type + "\n" + " Prénom du praticien :" + prenomPro + "\n" + "Nom du praticien : " + nomPro + "\n";
                DMR += "Compte-rendu : " + "\n" + cr + "\n";
                DMR += "Lien vers le PACS : " + "\n" + listeNumeros + "\n";

            }

            jTabbedPane1.setSelectedIndex(5);
            TexteApercu1.setText(DMR);

        }


    }//GEN-LAST:event_ConsulterDMRActionPerformed

    private void ChampNomPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChampNomPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChampNomPatientActionPerformed

    private void Imprimer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimer1ActionPerformed
        //pour pouvoir imprimer
        //Code permettant l'ouverture d'une fenetre qui permet d'imprimer la fiche de soin ou de la convertir en PDF
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");
        job.setPrintable(new Printable() {

            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(1.1, 1.1);

                TexteApercu1.paint(g2);
                return Printable.PAGE_EXISTS;
            }

        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_Imprimer1ActionPerformed

    private void Retour5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour5ActionPerformed
        TexteApercu1.setText("");
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_Retour5ActionPerformed

    private void Retour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour1ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
               ExamenBD exam=null;
        try {
            exam = new ExamenBD();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        try {
            liste = exam.listeExam(liste);
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);
        Tableau.setDefaultEditor(Object.class, null);
        Tableau.repaint();
        ChampNom.setText("");
        ChampPrenom.setText("");
        ChampAdress.setText("");
    }//GEN-LAST:event_Retour1ActionPerformed

    private void Enregistrer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Enregistrer1ActionPerformed
        /*Icon icon = ImageATraiter.getIcon(); //on récupère l'icon du jlabel
         BufferedImage imageTraite = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);// conversion de l'icon en BufferedImage
         Graphics g = imageTraite.createGraphics();
         // paint the Icon to the BufferedImage.
         icon.paintIcon(null, g, 0,0);
         g.dispose();*/

        File newFile = new File("./src/ImagePatient/" + selFile.getName() + "_" + NumArchivageChamp.getText() + ".jpg");//création d'un nouveau fichier'

        try {
            ImageIO.write(image, "jpg", newFile);//stockage de l'image traité dans le dossier imagePatient
        } catch (IOException e) {
        }

        //création d'un inputStream à partir du fichier
        //BufferedImage image = ImageIO.read(url);
        //ByteArrayOutputStream os = new ByteArrayOutputStream();
        //ImageIO.write(image, "jpg", os);
        //InputStream input = new ByteArrayInputStream(os.toByteArray());
        FileInputStream input = null;
        try {
            input = new FileInputStream(newFile);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);

        }
        BdConnection bd = null;
        try {
            bd = new BdConnection();

        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        //creation de la requête
        Connection conn = bd.getConnexion();

        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement("insert into PACS values(?,?,?)");
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            //id
            ps.setInt(1, Integer.parseInt(NumArchivageChamp.getText()));
            ps.setString(2, jLabel2.getText());
            ps.setBinaryStream(3, (InputStream) input, (int) newFile.length());

        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            //exécution de la requête
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Image insérée avec succès!");
        try {
            //fermer le preparedStatement
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            //fermer la connexion
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*String path = selFile.getAbsolutePath();
         Image image = null;
         try {
         image = ImageIO.read(selFile);
         } catch (IOException ex) {ssh
         Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
         }  */
        selFile.delete();
        selFile = null;
        ImageATraiter.setIcon(null);
        NumArchivageChamp.setText("");

        JOptionPane.showMessageDialog(this, "Image enregistrée");
        jTabbedPane1.setSelectedIndex(2);

    }//GEN-LAST:event_Enregistrer1ActionPerformed

    private void ReinitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReinitialiserActionPerformed
        Icon icon = ImageATraiter.getIcon();
        image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);

        String path = selFile.getAbsolutePath();

        try {
            image = ImageIO.read(selFile);
        } catch (IOException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        //affichage de l'image sélectionnée
        ImageExamen.setIcon(new ImageIcon(image));

        ImageIcon Newicon = new ImageIcon(image);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_ReinitialiserActionPerformed

    private void ENregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ENregistrerActionPerformed
        String nomPat = ChampNomPatient.getText();
        String prenomPat = ChampPrenomPatient.getText();
        String idPat = ChampIdPatient.getText();
        Document document = new Document();

        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("./src/DMRPatients/DMR_" + nomPat + "_" + prenomPat + "_" + idPat + " .pdf"));
            document.open();
            document.add(new Paragraph(TexteApercu1.getText()));
            document.close();
            writer.close();
        } catch (DocumentException | FileNotFoundException e) {
        }
    }//GEN-LAST:event_ENregistrerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new ManipRadio().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Accueil;
    private javax.swing.JLabel Adress;
    private javax.swing.JLabel Adress1;
    private javax.swing.JLabel Adresse;
    private javax.swing.JButton AjoutImag;
    private javax.swing.JLabel AjoutNewPatient;
    private javax.swing.JPanel AjouterExamen;
    private javax.swing.JPanel AjouterImage;
    private javax.swing.JButton AjouterPatient;
    private javax.swing.JLabel ApercuAvantImpression1;
    private javax.swing.JPanel ApercuAvantImpressionJPanel2;
    private javax.swing.JPanel ApercuAvantImpressionJPanel4;
    private javax.swing.JLabel CR1;
    private javax.swing.JLabel CR2;
    private javax.swing.JLabel ChampAdress;
    private javax.swing.JLabel ChampAdresse;
    private javax.swing.JTextField ChampAdresse1;
    private javax.swing.JFormattedTextField ChampCodePostal;
    private javax.swing.JFormattedTextField ChampDate;
    private javax.swing.JLabel ChampDateNaissance;
    private javax.swing.JLabel ChampIdExamen;
    private javax.swing.JTextField ChampIdPatient;
    private javax.swing.JLabel ChampIdPatient1;
    private javax.swing.JLabel ChampNaissance;
    private javax.swing.JLabel ChampNom;
    private javax.swing.JLabel ChampNom1;
    private javax.swing.JTextField ChampNom2;
    private javax.swing.JTextField ChampNomPatient;
    private javax.swing.JLabel ChampNomPraticien;
    private javax.swing.JLabel ChampPrenom;
    private javax.swing.JLabel ChampPrenom1;
    private javax.swing.JTextField ChampPrenom2;
    private javax.swing.JTextField ChampPrenomPatient;
    private javax.swing.JLabel ChampPrenomPraticien;
    private javax.swing.JLabel ChampSexe;
    private javax.swing.JLabel ChampSexe1;
    private javax.swing.JLabel ChampTypeExamen;
    private javax.swing.JTextField ChampVille;
    private javax.swing.JLabel ChampidPatient;
    private javax.swing.JComboBox<String> ChoixExamen;
    private javax.swing.JButton ChoixImage;
    private javax.swing.JLabel CodePostal;
    private javax.swing.JLabel ConnecteEnTantQUE;
    private javax.swing.JButton ConsulterDMR;
    private javax.swing.JPanel ConsulterExamen;
    private javax.swing.JPanel CritèreRecherchePannel;
    private javax.swing.JLabel Date;
    private javax.swing.JLabel DateExamen;
    private javax.swing.JLabel DateNaissa;
    private javax.swing.JLabel DateNaissance;
    private javax.swing.JLabel DateNaissance1;
    private javax.swing.JFormattedTextField DateNaissanceChamp;
    private javax.swing.JButton ENregistrer;
    private javax.swing.JButton Enregistrer1;
    private javax.swing.JRadioButton Feminin;
    private javax.swing.JLabel IDEXAMENJLABEL;
    private javax.swing.JLabel ImageATraiter;
    private javax.swing.JLabel ImageExamen;
    private javax.swing.JPanel Imprimer;
    private javax.swing.JButton Imprimer1;
    private javax.swing.JPanel InfoExamen;
    private javax.swing.JPanel InfoExamen1;
    private javax.swing.JPanel InfoPatient;
    private javax.swing.JPanel InfoPatient1;
    private javax.swing.JPanel InfoPatient2;
    private javax.swing.JButton Inverser;
    private javax.swing.JLabel ListeEnsembleExamen;
    private javax.swing.JRadioButton Masculin;
    private javax.swing.JLabel MessageDMRtext;
    private javax.swing.JLabel Nom;
    private javax.swing.JLabel Nom1;
    private javax.swing.JComboBox<String> NomExamen;
    private javax.swing.JLabel NomPatient;
    private javax.swing.JLabel NomPatient1;
    private javax.swing.JLabel NomPraticien;
    private javax.swing.JLabel NomPrenomUtilisateur;
    private javax.swing.JLabel NumArchivage;
    private javax.swing.JTextField NumArchivageChamp;
    private javax.swing.JPanel PanelBas;
    private javax.swing.JPanel PanelBas1;
    private javax.swing.JPanel PanelHaut;
    private javax.swing.JPanel PanelHaut1;
    private javax.swing.JPanel PanelHaut2;
    private javax.swing.JPanel PanelHaut3;
    private javax.swing.JPanel PanelListeEnsembleExamen;
    private javax.swing.JPanel PanelListeEnsembleExamen1;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JPanel PanelPrincipal2;
    private javax.swing.JPanel Panelmilieu;
    private javax.swing.JPanel Panelmilieu1;
    private javax.swing.JLabel Prenom;
    private javax.swing.JLabel Prenom1;
    private javax.swing.JLabel PrenomPatient;
    private javax.swing.JLabel PrenomPatient1;
    private javax.swing.JLabel PrenomPraticien;
    private javax.swing.JPanel Principal;
    private javax.swing.JButton Rechercher;
    private javax.swing.JButton Reinitialiser;
    private javax.swing.JButton Retour1;
    private javax.swing.JButton Retour2;
    private javax.swing.JButton Retour3;
    private javax.swing.JButton Retour4;
    private javax.swing.JButton Retour5;
    private javax.swing.JButton RotationHoraire;
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JScrollPane ScrollTableau;
    private javax.swing.JLabel Sexe;
    private javax.swing.JLabel Sexe1;
    private javax.swing.JLabel Sexe2;
    private javax.swing.JTable Tableau;
    private javax.swing.JTextPane TexteApercu1;
    private javax.swing.JLabel Titre;
    private javax.swing.JLabel TitreAjoutExamen;
    private javax.swing.JPanel TraitementImage;
    private javax.swing.JLabel TypeExamen;
    private javax.swing.JLabel TypeExamen1;
    private javax.swing.JLabel TypeExamen2;
    private javax.swing.JLabel Ville;
    private javax.swing.JButton deconnexion;
    private javax.swing.JLabel dmr;
    private javax.swing.JLabel idEXAMEN;
    private javax.swing.JLabel idExamen;
    private javax.swing.JLabel idPatient;
    private javax.swing.JLabel idPatient1;
    private javax.swing.JLabel idPatient2;
    private javax.swing.JLabel identifiantPro;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JList listeImage;
    private javax.swing.JLabel numArchivagenew;
    // End of variables declaration//GEN-END:variables
}
