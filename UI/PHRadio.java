/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BD.BdConnection;
import BD.ExamenBD;
import BD.IdPacs;
import BD.ImageBD;
import BD.PatientsBD;
import BD.PersonnelBD;
import java.awt.Image;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import NOYAU.CompteRendu;
import NOYAU.Examen;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sosso
 */
public class PHRadio extends javax.swing.JFrame {

    private File selFile;
    private BufferedImage image;
    int pageAnt;

    public PHRadio() throws SQLException {

        initComponents();
         ConsulterDMR.setEnabled(false);
       // NomExamen.setVisible(false);
        //TypeExamen.setVisible(false);
        numArchivagenew.setVisible(false);
        pageAnt = 0;
        idexam.setVisible(false);
        jTabbedPane1.setEnabledAt(1, false);

        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);
        jTabbedPane1.setEnabledAt(4, false);

        image = null;
        selFile = null;

        ExamenBD exam = new ExamenBD();
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        liste = exam.listeExam(liste);
        Tableau.setModel(liste);

        Tableau.repaint();

        Tableau.setDefaultEditor(Object.class, null);

        

        setIcone();

    }

    public void setIcone() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo Radiosistem2.jpeg")));

    }

    public JLabel getIdentifiantPro() {
        return identifiantPro;
    }

    public JLabel getNomPrenomUtilisateurAccueil() {
        return NomPrenomUtilisateurAccueil;
    }

    public JLabel getNomPrenomUtilisateur1() {
        return NomPrenomUtilisateur1;
    }

    public JLabel getNomPrenonUtilisateur() {
        return NomPrenonUtilisateur;
    }

    public JLabel getNomUtilisateur() {
        return NomUtilisateur;
    }

    public static BufferedImage rotateImage(BufferedImage imageToRotate) {
        int widthOfImage = imageToRotate.getWidth();
        int heightOfImage = imageToRotate.getHeight();
        int typeOfImage = imageToRotate.getType();

        BufferedImage newImageFromBuffer = new BufferedImage(widthOfImage, heightOfImage, typeOfImage);

        Graphics2D graphics2D = newImageFromBuffer.createGraphics();

        graphics2D.rotate(Math.toRadians(90), widthOfImage / 2, heightOfImage / 2);
        graphics2D.drawImage(imageToRotate, null, 0, 0);

        return newImageFromBuffer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Accueil = new javax.swing.JPanel();
        Principal = new javax.swing.JPanel();
        CritèreRecherchePannel = new javax.swing.JPanel();
        PanelListeEnsembleExamen = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ConsulterDMR = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        ScrollTableau = new javax.swing.JScrollPane();
        Tableau = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        InfoPatient = new javax.swing.JPanel();
        NomPatient = new javax.swing.JLabel();
        PrenomPatient = new javax.swing.JLabel();
        TypeExamen = new javax.swing.JLabel();
        NomExamen = new javax.swing.JComboBox<String>();
        ChampNomPatient = new javax.swing.JTextField();
        ChampPrenomPatient = new javax.swing.JTextField();
        Rechercher = new javax.swing.JButton();
        idPatient = new javax.swing.JLabel();
        ChampIdPatient = new javax.swing.JTextField();
        ConnecteEnTantQUE = new javax.swing.JLabel();
        NomPrenomUtilisateurAccueil = new javax.swing.JLabel();
        PanelListeEnsembleExamen1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        deconnexion = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        identifiantPro = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        ListeEnsembleExamen = new javax.swing.JLabel();
        ConsulterExamen = new javax.swing.JPanel();
        PanelHaut1 = new javax.swing.JPanel();
        ConnecteEnTantQue1 = new javax.swing.JLabel();
        NomPrenomUtilisateur1 = new javax.swing.JLabel();
        Retour2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        Titre = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listeImage = new javax.swing.JList();
        jPanel20 = new javax.swing.JPanel();
        InfoPatient2 = new javax.swing.JPanel();
        Nom1 = new javax.swing.JLabel();
        Prenom1 = new javax.swing.JLabel();
        DateNaissance1 = new javax.swing.JLabel();
        Sexe1 = new javax.swing.JLabel();
        Adress1 = new javax.swing.JLabel();
        idPatient2 = new javax.swing.JLabel();
        ChampNom1 = new javax.swing.JLabel();
        ChampPrenom1 = new javax.swing.JLabel();
        ChampSexe1 = new javax.swing.JLabel();
        ChampAdresse = new javax.swing.JLabel();
        ChampDateNaissance = new javax.swing.JLabel();
        ChampIdPatient1 = new javax.swing.JLabel();
        InfoExamen1 = new javax.swing.JPanel();
        TypeExamen2 = new javax.swing.JLabel();
        ChampTypeExamen = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        PrenomPraticien = new javax.swing.JLabel();
        NomPraticien = new javax.swing.JLabel();
        ChampPrenomPraticien = new javax.swing.JLabel();
        ChampNomPraticien = new javax.swing.JLabel();
        idExamen = new javax.swing.JLabel();
        ChampIdExamen = new javax.swing.JLabel();
        ChampDate = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        AjoutImag = new javax.swing.JButton();
        RedigerCR1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel25 = new javax.swing.JPanel();
        CR1 = new javax.swing.JLabel();
        CR2 = new javax.swing.JLabel();
        AjouterExamen = new javax.swing.JPanel();
        PanelPrincipal = new javax.swing.JPanel();
        PanelHaut = new javax.swing.JPanel();
        PanelBas = new javax.swing.JPanel();
        PanelHaut2 = new javax.swing.JPanel();
        ImageExamen = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        RedigerCR = new javax.swing.JButton();
        ChoixImage = new javax.swing.JButton();
        numArchivagenew = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        InfoPatient1 = new javax.swing.JPanel();
        ChampNom = new javax.swing.JLabel();
        ChampPrenom = new javax.swing.JLabel();
        ChampNaissance = new javax.swing.JLabel();
        ChampSexe = new javax.swing.JLabel();
        ChampAdress = new javax.swing.JLabel();
        ChampidPatient = new javax.swing.JLabel();
        Nom = new javax.swing.JLabel();
        Prenom = new javax.swing.JLabel();
        DateNaissance = new javax.swing.JLabel();
        Sexe = new javax.swing.JLabel();
        Adress = new javax.swing.JLabel();
        idPatient1 = new javax.swing.JLabel();
        InfoExamen = new javax.swing.JPanel();
        TypeExamen1 = new javax.swing.JLabel();
        ChoixExamen = new javax.swing.JComboBox<String>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        idEXAMEN = new javax.swing.JLabel();
        IDEXAMENJLABEL = new javax.swing.JLabel();
        nomPH = new javax.swing.JLabel();
        prenomPH = new javax.swing.JLabel();
        DateExamen = new javax.swing.JLabel();
        idexamen = new javax.swing.JLabel();
        Retour1 = new javax.swing.JButton();
        ConnecteEnTantQue = new javax.swing.JLabel();
        NomUtilisateur = new javax.swing.JLabel();
        TitreAjoutExamen = new javax.swing.JLabel();
        AjouterImage = new javax.swing.JPanel();
        PanelPrincipal2 = new javax.swing.JPanel();
        TraitementImage = new javax.swing.JPanel();
        Inverser = new javax.swing.JButton();
        RotationHoraire = new javax.swing.JButton();
        Reinitialiser = new javax.swing.JButton();
        NumArchivage = new javax.swing.JLabel();
        NumArchivageChamp = new javax.swing.JTextField();
        ImageATraiter = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Enregistrer1 = new javax.swing.JButton();
        RedactionCR = new javax.swing.JPanel();
        PanelPrincipal1 = new javax.swing.JPanel();
        PanelTitre1 = new javax.swing.JPanel();
        ConnecteEnTantQue2 = new javax.swing.JLabel();
        NomPrenonUtilisateur = new javax.swing.JLabel();
        Retour3 = new javax.swing.JButton();
        Enregistrer = new javax.swing.JButton();
        panelRedactionObservation = new javax.swing.JScrollPane();
        redactionObservation = new javax.swing.JTextArea();
        labelObservation = new javax.swing.JLabel();
        panelResultat = new javax.swing.JScrollPane();
        RedactionResultat = new javax.swing.JTextArea();
        labelResultat = new javax.swing.JLabel();
        labelTitre = new javax.swing.JLabel();
        titreCR = new javax.swing.JTextField();
        Titre1 = new javax.swing.JLabel();
        PanelTitre2 = new javax.swing.JPanel();
        idexam = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        ApercuAvantImpressionJPanel2 = new javax.swing.JPanel();
        Retour5 = new javax.swing.JButton();
        ConnecteEnTantQUe1 = new javax.swing.JLabel();
        NomPrenomUtilisateur3 = new javax.swing.JLabel();
        ApercuAvantImpressionJPanel3 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Imprimer1 = new javax.swing.JButton();
        EnregistrerDMR = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        ScrollPane1 = new javax.swing.JScrollPane();
        TexteApercu1 = new javax.swing.JTextPane();
        jPanel10 = new javax.swing.JPanel();
        ApercuAvantImpression1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(950, 600));
        jTabbedPane1.setVerifyInputWhenFocusTarget(false);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        Accueil.setBackground(new java.awt.Color(255, 255, 255));

        Principal.setBackground(new java.awt.Color(255, 255, 255));

        CritèreRecherchePannel.setBackground(new java.awt.Color(255, 255, 255));

        PanelListeEnsembleExamen.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout PanelListeEnsembleExamenLayout = new javax.swing.GroupLayout(PanelListeEnsembleExamen);
        PanelListeEnsembleExamen.setLayout(PanelListeEnsembleExamenLayout);
        PanelListeEnsembleExamenLayout.setHorizontalGroup(
            PanelListeEnsembleExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelListeEnsembleExamenLayout.setVerticalGroup(
            PanelListeEnsembleExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/AJOUTEREXAMEN.png"))); // NOI18N

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Ajouter un examen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ConsulterDMR.setBackground(new java.awt.Color(204, 255, 204));
        ConsulterDMR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConsulterDMR.setText("Consulter DMR");
        ConsulterDMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsulterDMRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ConsulterDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addGap(192, 192, 192)
                            .addComponent(jLabel6))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addGap(132, 132, 132)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(ConsulterDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        ScrollTableau.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true));

        Tableau.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idPatient", "Nom patient", "Prénom patient", "Sexe", "Date de naissance", "idExamen", "Type d'examen", "Date examen", "Nom praticien", "Prénom praticien"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tableau.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Tableau.setRowHeight(20);
        Tableau.getTableHeader().setReorderingAllowed(false);
        Tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauMouseClicked(evt);
            }
        });
        ScrollTableau.setViewportView(Tableau);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(ScrollTableau, javax.swing.GroupLayout.PREFERRED_SIZE, 1359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollTableau, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true), "Critères de recherche", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        NomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPatient.setText("Nom patient: ");

        PrenomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPatient.setText("Prénom patient : ");

        TypeExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen.setText("Type d'examen: ");

        NomExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NomExamen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "  ", "Mammographie", "Echographie", "Scanner", "Radiographie", " " }));
        NomExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomExamenActionPerformed(evt);
            }
        });

        Rechercher.setBackground(new java.awt.Color(153, 153, 153));
        Rechercher.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Rechercher.setText("Rechercher");
        Rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercherActionPerformed(evt);
            }
        });

        idPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient.setText("idPatient:");

        javax.swing.GroupLayout InfoPatientLayout = new javax.swing.GroupLayout(InfoPatient);
        InfoPatient.setLayout(InfoPatientLayout);
        InfoPatientLayout.setHorizontalGroup(
            InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addComponent(PrenomPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampPrenomPatient, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addComponent(NomPatient)
                        .addGap(23, 23, 23)
                        .addComponent(ChampNomPatient))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addComponent(idPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(ChampIdPatient)))
                .addGap(113, 113, 113)
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Rechercher))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addComponent(TypeExamen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NomExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 75, Short.MAX_VALUE)))
                .addContainerGap())
        );
        InfoPatientLayout.setVerticalGroup(
            InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatientLayout.createSequentialGroup()
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomPatient)
                            .addComponent(ChampNomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(InfoPatientLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TypeExamen)
                            .addComponent(NomExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7)
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrenomPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampPrenomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoPatientLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Rechercher))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoPatientLayout.createSequentialGroup()
                        .addGroup(InfoPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ChampIdPatient))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(InfoPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(InfoPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CritèreRecherchePannelLayout = new javax.swing.GroupLayout(CritèreRecherchePannel);
        CritèreRecherchePannel.setLayout(CritèreRecherchePannelLayout);
        CritèreRecherchePannelLayout.setHorizontalGroup(
            CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addGap(1005, 1005, 1005)
                .addComponent(PanelListeEnsembleExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CritèreRecherchePannelLayout.setVerticalGroup(
            CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CritèreRecherchePannelLayout.createSequentialGroup()
                .addGroup(CritèreRecherchePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelListeEnsembleExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        ConnecteEnTantQUE.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQUE.setText("Connecté en tant que :");

        NomPrenomUtilisateurAccueil.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NomPrenomUtilisateurAccueil.setText("Seuad Kassa");

        PanelListeEnsembleExamen1.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout PanelListeEnsembleExamen1Layout = new javax.swing.GroupLayout(PanelListeEnsembleExamen1);
        PanelListeEnsembleExamen1.setLayout(PanelListeEnsembleExamen1Layout);
        PanelListeEnsembleExamen1Layout.setHorizontalGroup(
            PanelListeEnsembleExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelListeEnsembleExamen1Layout.setVerticalGroup(
            PanelListeEnsembleExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        deconnexion.setBackground(new java.awt.Color(204, 255, 204));
        deconnexion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        deconnexion.setText("Déconnexion");
        deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        identifiantPro.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        identifiantPro.setText("0000000000");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Identifiant :");

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        ListeEnsembleExamen.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ListeEnsembleExamen.setForeground(new java.awt.Color(255, 51, 0));
        ListeEnsembleExamen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ListeEnsembleExamen.setText("Liste de l'ensemble des examens");
        ListeEnsembleExamen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListeEnsembleExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(458, 458, 458))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ListeEnsembleExamen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelListeEnsembleExamen1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(CritèreRecherchePannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(identifiantPro, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deconnexion))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(ConnecteEnTantQUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NomPrenomUtilisateurAccueil, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGap(1161, 1161, 1161)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NomPrenomUtilisateurAccueil)
                    .addComponent(ConnecteEnTantQUE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identifiantPro)
                    .addComponent(jLabel2)
                    .addComponent(deconnexion))
                .addGap(25, 25, 25)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(PanelListeEnsembleExamen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(CritèreRecherchePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AccueilLayout = new javax.swing.GroupLayout(Accueil);
        Accueil.setLayout(AccueilLayout);
        AccueilLayout.setHorizontalGroup(
            AccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AccueilLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AccueilLayout.setVerticalGroup(
            AccueilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccueilLayout.createSequentialGroup()
                .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Accueil", Accueil);

        ConsulterExamen.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut1.setBackground(new java.awt.Color(255, 255, 255));

        ConnecteEnTantQue1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQue1.setText("Connecté en tant que:");

        NomPrenomUtilisateur1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPrenomUtilisateur1.setText("Seuad KASSA");

        Retour2.setBackground(new java.awt.Color(204, 255, 204));
        Retour2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour2.setText("Retour");
        Retour2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 51, 0));
        jPanel4.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 51, 0));
        jPanel7.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        Titre.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Titre.setForeground(new java.awt.Color(255, 51, 0));
        Titre.setText("Consulter Examen");
        Titre.setToolTipText("");
        Titre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(785, 785, 785)
                .addComponent(Titre, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titre)
                .addContainerGap())
        );

        jPanel26.setBackground(new java.awt.Color(255, 51, 0));
        jPanel26.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelHaut1Layout = new javax.swing.GroupLayout(PanelHaut1);
        PanelHaut1.setLayout(PanelHaut1Layout);
        PanelHaut1Layout.setHorizontalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHaut1Layout.createSequentialGroup()
                .addComponent(ConnecteEnTantQue1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NomPrenomUtilisateur1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelHaut1Layout.setVerticalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHaut1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Retour2)
                    .addComponent(ConnecteEnTantQue1)
                    .addComponent(NomPrenomUtilisateur1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        listeImage.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listeImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listeImageMouseClicked(evt);
            }
        });
        listeImage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listeImageKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(listeImage);

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 2, true), "Informations Patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        Nom1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nom1.setText("Nom :");

        Prenom1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Prenom1.setText("Prénom :");

        DateNaissance1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissance1.setText("Date de naissance :");

        Sexe1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe1.setText("Sexe :");

        Adress1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adress1.setText("Adresse :");

        idPatient2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient2.setText("idPatient :");

        ChampNom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNom1.setText("NomPatient");

        ChampPrenom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenom1.setText("PrénomPatient");

        ChampSexe1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampSexe1.setText("Féminin");

        ChampAdresse.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampAdresse.setText("3 rue des Violettes 38000 Grenoble");

        ChampDateNaissance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampDateNaissance.setText("jLabel1");

        ChampIdPatient1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampIdPatient1.setText("idPatient");

        javax.swing.GroupLayout InfoPatient2Layout = new javax.swing.GroupLayout(InfoPatient2);
        InfoPatient2.setLayout(InfoPatient2Layout);
        InfoPatient2Layout.setHorizontalGroup(
            InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient2Layout.createSequentialGroup()
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InfoPatient2Layout.createSequentialGroup()
                                .addComponent(idPatient2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ChampIdPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DateNaissance1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ChampDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InfoPatient2Layout.createSequentialGroup()
                                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                                        .addComponent(Prenom1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ChampPrenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(313, 313, 313))
                                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                                        .addComponent(Nom1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ChampNom1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(310, 310, 310)
                                        .addComponent(Sexe1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampSexe1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(InfoPatient2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Adress1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChampAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        InfoPatient2Layout.setVerticalGroup(
            InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Nom1)
                        .addComponent(ChampNom1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChampSexe1)
                        .addComponent(Sexe1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prenom1)
                    .addComponent(ChampPrenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idPatient2)
                    .addComponent(ChampIdPatient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DateNaissance1)
                    .addComponent(ChampDateNaissance))
                .addGap(18, 18, 18)
                .addGroup(InfoPatient2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adress1)
                    .addComponent(ChampAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InfoExamen1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 2, true), "Informations examen", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        TypeExamen2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen2.setText("Type d'examen :");

        ChampTypeExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampTypeExamen.setText("Radio");

        Date.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Date.setText("Date :");

        PrenomPraticien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPraticien.setText("Prénom praticien :");

        NomPraticien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPraticien.setText("Nom praticien :");

        ChampPrenomPraticien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenomPraticien.setText("Prénom praticien");

        ChampNomPraticien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNomPraticien.setText("Nom praticien");

        idExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idExamen.setText("idExamen :");

        ChampIdExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampIdExamen.setText("idExamen");

        ChampDate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampDate.setText("jLabel4");

        javax.swing.GroupLayout InfoExamen1Layout = new javax.swing.GroupLayout(InfoExamen1);
        InfoExamen1.setLayout(InfoExamen1Layout);
        InfoExamen1Layout.setHorizontalGroup(
            InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamen1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(TypeExamen2)
                        .addGap(8, 8, 8)
                        .addComponent(ChampTypeExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(idExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampIdExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampDate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(PrenomPraticien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChampPrenomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InfoExamen1Layout.createSequentialGroup()
                        .addComponent(NomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampNomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        InfoExamen1Layout.setVerticalGroup(
            InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamen1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeExamen2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampTypeExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idExamen)
                    .addComponent(ChampIdExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrenomPraticien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampPrenomPraticien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NomPraticien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ChampNomPraticien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InfoExamen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Date)
                        .addComponent(ChampDate)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(InfoPatient2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(InfoExamen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InfoExamen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InfoPatient2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        AjoutImag.setBackground(new java.awt.Color(204, 255, 204));
        AjoutImag.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        AjoutImag.setText("Ajouter image");
        AjoutImag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutImagActionPerformed(evt);
            }
        });

        RedigerCR1.setBackground(new java.awt.Color(204, 255, 204));
        RedigerCR1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        RedigerCR1.setText("Rédiger un compte rendu");
        RedigerCR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedigerCR1ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/COMPTERENDU.png"))); // NOI18N

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel5))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RedigerCR1)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(AjoutImag, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(RedigerCR1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AjoutImag, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        CR1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CR1.setForeground(new java.awt.Color(255, 51, 0));
        CR1.setText("Compte-rendu");

        CR2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CR2.setForeground(new java.awt.Color(255, 51, 0));
        CR2.setText("Liste des images");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CR1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(349, 349, 349)
                .addComponent(CR2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CR1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CR2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ConsulterExamenLayout = new javax.swing.GroupLayout(ConsulterExamen);
        ConsulterExamen.setLayout(ConsulterExamenLayout);
        ConsulterExamenLayout.setHorizontalGroup(
            ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ConsulterExamenLayout.createSequentialGroup()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsulterExamenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        ConsulterExamenLayout.setVerticalGroup(
            ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsulterExamenLayout.createSequentialGroup()
                .addComponent(PanelHaut1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ConsulterExamenLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(ConsulterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulter un examen", ConsulterExamen);

        AjouterExamen.setBackground(new java.awt.Color(255, 255, 255));

        PanelPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHautLayout = new javax.swing.GroupLayout(PanelHaut);
        PanelHaut.setLayout(PanelHautLayout);
        PanelHautLayout.setHorizontalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHautLayout.setVerticalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        PanelBas.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut2.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHaut2Layout = new javax.swing.GroupLayout(PanelHaut2);
        PanelHaut2.setLayout(PanelHaut2Layout);
        PanelHaut2Layout.setHorizontalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHaut2Layout.setVerticalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        ImageExamen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ImageExamenMouseClicked(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ajoutexamen.png"))); // NOI18N

        RedigerCR.setBackground(new java.awt.Color(204, 255, 204));
        RedigerCR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        RedigerCR.setText("Rédiger un compte rendu");
        RedigerCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedigerCRActionPerformed(evt);
            }
        });

        ChoixImage.setBackground(new java.awt.Color(204, 255, 204));
        ChoixImage.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ChoixImage.setText("Ajouter image numérisée");
        ChoixImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoixImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(811, 811, 811))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ChoixImage)
                            .addComponent(RedigerCR))
                        .addGap(751, 751, 751))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(RedigerCR, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(ChoixImage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        numArchivagenew.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        numArchivagenew.setText("numArchivagenew");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        InfoPatient1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true), "Informations patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        ChampNom.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNom.setText("PIKACHU");

        ChampPrenom.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenom.setText("Seuad");

        ChampNaissance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNaissance.setText("jLabel6");

        ChampSexe.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampSexe.setText("M");

        ChampAdress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampAdress.setText("12 rue du pont des fleurs");

        ChampidPatient.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampidPatient.setText("1111111111");

        Nom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nom.setText("Nom:");

        Prenom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Prenom.setText("Prénom:");

        DateNaissance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissance.setText("Date de naissance:");

        Sexe.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe.setText("Sexe:");

        Adress.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adress.setText("Adresse:");

        idPatient1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idPatient1.setText("idPatient:");

        javax.swing.GroupLayout InfoPatient1Layout = new javax.swing.GroupLayout(InfoPatient1);
        InfoPatient1.setLayout(InfoPatient1Layout);
        InfoPatient1Layout.setHorizontalGroup(
            InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoPatient1Layout.createSequentialGroup()
                        .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Adress)
                            .addComponent(Prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InfoPatient1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(ChampAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(InfoPatient1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoPatient1Layout.createSequentialGroup()
                                        .addComponent(DateNaissance)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfoPatient1Layout.createSequentialGroup()
                                        .addComponent(Sexe)
                                        .addGap(26, 26, 26)))
                                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ChampSexe, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChampNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41))))
                    .addGroup(InfoPatient1Layout.createSequentialGroup()
                        .addComponent(Nom, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(ChampNom)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(idPatient1)
                .addGap(18, 18, 18)
                .addComponent(ChampidPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        InfoPatient1Layout.setVerticalGroup(
            InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPatient1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampSexe)
                    .addComponent(Nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampNom)
                    .addComponent(Sexe)
                    .addComponent(ChampidPatient)
                    .addComponent(idPatient1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Prenom)
                    .addComponent(ChampPrenom)
                    .addComponent(DateNaissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChampNaissance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InfoPatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampAdress)
                    .addComponent(Adress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InfoExamen.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true), "Informations examen", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        TypeExamen1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        TypeExamen1.setText("Type d'examen :");

        ChoixExamen.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ChoixExamen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Radiographie", "Mammographie", "Scanner", "IRM", " " }));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Date :");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Nom praticien :");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Prénom praticien :");

        idEXAMEN.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idEXAMEN.setText("idExamen :");

        nomPH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nomPH.setText("jLabel4");

        prenomPH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        prenomPH.setText("jLabel4");

        DateExamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DateExamen.setText("jLabel4");

        idexamen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        idexamen.setText("jLabel4");

        javax.swing.GroupLayout InfoExamenLayout = new javax.swing.GroupLayout(InfoExamen);
        InfoExamen.setLayout(InfoExamenLayout);
        InfoExamenLayout.setHorizontalGroup(
            InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamenLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(DateExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(296, 296, 296)
                        .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDEXAMENJLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(InfoExamenLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nomPH, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addComponent(TypeExamen1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChoixExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idEXAMEN, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idexamen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prenomPH, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        InfoExamenLayout.setVerticalGroup(
            InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoExamenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeExamen1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChoixExamen)
                    .addComponent(jLabel14)
                    .addComponent(prenomPH)
                    .addComponent(idEXAMEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idexamen))
                .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(nomPH))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IDEXAMENJLABEL))
                    .addGroup(InfoExamenLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(InfoExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateExamen)
                            .addComponent(jLabel12))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfoPatient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(InfoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InfoPatient1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InfoExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelBasLayout = new javax.swing.GroupLayout(PanelBas);
        PanelBas.setLayout(PanelBasLayout);
        PanelBasLayout.setHorizontalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBasLayout.createSequentialGroup()
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelHaut2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImageExamen))
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addGap(730, 730, 730)
                .addComponent(numArchivagenew)
                .addGap(82, 82, 82)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelBasLayout.setVerticalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addComponent(PanelHaut2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBasLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBasLayout.createSequentialGroup()
                        .addGap(426, 426, 426)
                        .addComponent(ImageExamen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numArchivagenew))
                .addGap(266, 266, 266))
        );

        Retour1.setBackground(new java.awt.Color(204, 255, 204));
        Retour1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour1.setText("Retour");
        Retour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour1ActionPerformed(evt);
            }
        });

        ConnecteEnTantQue.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQue.setText("Connecté en tant que :");

        NomUtilisateur.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomUtilisateur.setText("jLabel3");

        TitreAjoutExamen.setBackground(new java.awt.Color(255, 255, 255));
        TitreAjoutExamen.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        TitreAjoutExamen.setForeground(new java.awt.Color(255, 102, 0));
        TitreAjoutExamen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitreAjoutExamen.setText("Ajout d'un nouvel examen");
        TitreAjoutExamen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConnecteEnTantQue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NomUtilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addComponent(TitreAjoutExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConnecteEnTantQue)
                            .addComponent(NomUtilisateur))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipalLayout.createSequentialGroup()
                        .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(PanelHaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitreAjoutExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(PanelBas, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout AjouterExamenLayout = new javax.swing.GroupLayout(AjouterExamen);
        AjouterExamen.setLayout(AjouterExamenLayout);
        AjouterExamenLayout.setHorizontalGroup(
            AjouterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AjouterExamenLayout.setVerticalGroup(
            AjouterExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.addTab("Ajouter un examen", AjouterExamen);

        PanelPrincipal2.setBackground(new java.awt.Color(255, 255, 255));

        TraitementImage.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 1, true), "Traitement d'image", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        Inverser.setBackground(new java.awt.Color(255, 255, 204));
        Inverser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Inverser.setText("Inverser");
        Inverser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InverserActionPerformed(evt);
            }
        });

        RotationHoraire.setBackground(new java.awt.Color(255, 255, 204));
        RotationHoraire.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        RotationHoraire.setText("Rotation 90° ");
        RotationHoraire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotationHoraireActionPerformed(evt);
            }
        });

        Reinitialiser.setBackground(new java.awt.Color(255, 255, 204));
        Reinitialiser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Reinitialiser.setText("Réinitialiser");
        Reinitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReinitialiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TraitementImageLayout = new javax.swing.GroupLayout(TraitementImage);
        TraitementImage.setLayout(TraitementImageLayout);
        TraitementImageLayout.setHorizontalGroup(
            TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TraitementImageLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RotationHoraire, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(Inverser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Reinitialiser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        TraitementImageLayout.setVerticalGroup(
            TraitementImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TraitementImageLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(Inverser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(65, 65, 65)
                .addComponent(RotationHoraire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(91, 91, 91)
                .addComponent(Reinitialiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        NumArchivage.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NumArchivage.setText("Numéro d'archivage : ");

        NumArchivageChamp.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NumArchivageChamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumArchivageChampActionPerformed(evt);
            }
        });

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/radio.png"))); // NOI18N

        Enregistrer1.setBackground(new java.awt.Color(204, 255, 204));
        Enregistrer1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Enregistrer1.setText("Enregistrer");
        Enregistrer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Enregistrer1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Enregistrer1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(151, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(Enregistrer1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelPrincipal2Layout = new javax.swing.GroupLayout(PanelPrincipal2);
        PanelPrincipal2.setLayout(PanelPrincipal2Layout);
        PanelPrincipal2Layout.setHorizontalGroup(
            PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(TraitementImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(274, 274, 274)
                        .addComponent(ImageATraiter)
                        .addGap(400, 400, 400))
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(NumArchivage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NumArchivageChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 406, Short.MAX_VALUE)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipal2Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        PanelPrincipal2Layout.setVerticalGroup(
            PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumArchivage)
                            .addComponent(NumArchivageChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addGroup(PanelPrincipal2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TraitementImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelPrincipal2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(ImageATraiter))
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1187, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AjouterImageLayout = new javax.swing.GroupLayout(AjouterImage);
        AjouterImage.setLayout(AjouterImageLayout);
        AjouterImageLayout.setHorizontalGroup(
            AjouterImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AjouterImageLayout.setVerticalGroup(
            AjouterImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ajouter une image", AjouterImage);

        PanelPrincipal1.setBackground(new java.awt.Color(255, 255, 255));

        PanelTitre1.setBackground(new java.awt.Color(255, 102, 0));

        ConnecteEnTantQue2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQue2.setText("Connecté en tant que :");

        NomPrenonUtilisateur.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPrenonUtilisateur.setText("jLabel3");

        Retour3.setBackground(new java.awt.Color(204, 255, 204));
        Retour3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour3.setText("Retour");
        Retour3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour3ActionPerformed(evt);
            }
        });

        Enregistrer.setBackground(new java.awt.Color(204, 255, 204));
        Enregistrer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Enregistrer.setText("Enregistrer");
        Enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerActionPerformed(evt);
            }
        });

        redactionObservation.setColumns(20);
        redactionObservation.setRows(5);
        panelRedactionObservation.setViewportView(redactionObservation);

        labelObservation.setBackground(new java.awt.Color(255, 255, 255));
        labelObservation.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelObservation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelObservation.setText("OBSERVATIONS");

        RedactionResultat.setColumns(20);
        RedactionResultat.setRows(5);
        panelResultat.setViewportView(RedactionResultat);

        labelResultat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelResultat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResultat.setText("RESULTATS");

        labelTitre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitre.setText("TITRE :");

        Titre1.setBackground(new java.awt.Color(255, 255, 255));
        Titre1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Titre1.setForeground(new java.awt.Color(255, 102, 0));
        Titre1.setText("Rédaction compte-rendu");
        Titre1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        PanelTitre2.setBackground(new java.awt.Color(255, 102, 0));

        idexam.setText("0000000001");

        javax.swing.GroupLayout PanelPrincipal1Layout = new javax.swing.GroupLayout(PanelPrincipal1);
        PanelPrincipal1.setLayout(PanelPrincipal1Layout);
        PanelPrincipal1Layout.setHorizontalGroup(
            PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelTitre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                .addGroup(PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(titreCR, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(529, 529, 529))
                    .addComponent(labelObservation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                                .addComponent(ConnecteEnTantQue2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NomPrenonUtilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Retour3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addComponent(panelResultat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelRedactionObservation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                                .addGap(385, 385, 385)
                                .addComponent(labelResultat, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                                .addGap(448, 448, 448)))))
                .addContainerGap())
            .addComponent(PanelTitre2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPrincipal1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idexam)
                .addGap(42, 42, 42)
                .addComponent(Enregistrer)
                .addGap(21, 21, 21))
            .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                .addGap(734, 734, 734)
                .addComponent(Titre1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelPrincipal1Layout.setVerticalGroup(
            PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                .addGroup(PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConnecteEnTantQue2)
                    .addComponent(NomPrenonUtilisateur)
                    .addComponent(Retour3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTitre2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Titre1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTitre1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelPrincipal1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(titreCR, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelResultat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelResultat, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelObservation, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRedactionObservation, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(PanelPrincipal1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Enregistrer)
                    .addComponent(idexam))
                .addContainerGap(736, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout RedactionCRLayout = new javax.swing.GroupLayout(RedactionCR);
        RedactionCR.setLayout(RedactionCRLayout);
        RedactionCRLayout.setHorizontalGroup(
            RedactionCRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        RedactionCRLayout.setVerticalGroup(
            RedactionCRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelPrincipal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Rédiger un compte-rendu", RedactionCR);

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setPreferredSize(new java.awt.Dimension(1751, 1678));

        ApercuAvantImpressionJPanel2.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel2Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel2);
        ApercuAvantImpressionJPanel2.setLayout(ApercuAvantImpressionJPanel2Layout);
        ApercuAvantImpressionJPanel2Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel2Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Retour5.setBackground(new java.awt.Color(204, 255, 204));
        Retour5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour5.setText("Retour");
        Retour5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour5ActionPerformed(evt);
            }
        });

        ConnecteEnTantQUe1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ConnecteEnTantQUe1.setText("Connecté en tant que :");

        NomPrenomUtilisateur3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPrenomUtilisateur3.setText("jLabel3");

        ApercuAvantImpressionJPanel3.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel3Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel3);
        ApercuAvantImpressionJPanel3.setLayout(ApercuAvantImpressionJPanel3Layout);
        ApercuAvantImpressionJPanel3Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel3Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IMPRIMER.png"))); // NOI18N

        Imprimer1.setBackground(new java.awt.Color(204, 255, 204));
        Imprimer1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Imprimer1.setText("Imprimer");
        Imprimer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimer1ActionPerformed(evt);
            }
        });

        EnregistrerDMR.setBackground(new java.awt.Color(204, 255, 204));
        EnregistrerDMR.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EnregistrerDMR.setText("Enregistrer");
        EnregistrerDMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerDMRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Imprimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(EnregistrerDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(320, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel7)
                .addGap(51, 51, 51)
                .addComponent(Imprimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(EnregistrerDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        ScrollPane1.setViewportView(TexteApercu1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(320, Short.MAX_VALUE)
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(468, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        ApercuAvantImpression1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ApercuAvantImpression1.setForeground(new java.awt.Color(255, 51, 0));
        ApercuAvantImpression1.setText("Impression DMR");
        ApercuAvantImpression1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ApercuAvantImpression1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(ApercuAvantImpression1)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(729, 729, 729)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConnecteEnTantQUe1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomPrenomUtilisateur3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(ApercuAvantImpressionJPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ConnecteEnTantQUe1)
                        .addComponent(NomPrenomUtilisateur3))
                    .addComponent(Retour5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(ApercuAvantImpressionJPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(455, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, 1757, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Impression", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1762, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1678, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumArchivageChampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumArchivageChampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumArchivageChampActionPerformed

    private void ChoixImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoixImageActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File("./src/jpg"));

        //filtrer les fichiers
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);
        //si l'utilisateur clique sur enregistrer dans Jfilechooser
        if (res == JFileChooser.APPROVE_OPTION) {
            this.selFile = file.getSelectedFile();

            FileInputStream input = null;
            try {
                input = new FileInputStream(selFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);

            }
            BdConnection bd = null;
            try {
                bd = new BdConnection();

            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //creation de la requête
            Connection conn = bd.getConnexion();

            //création d'un identifiant pacs    
            IdPacs idImage = null;
            try {
                idImage = new IdPacs(conn);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'idPacs
            numArchivagenew.setText(Integer.toString(idImage.getIdPacs()));

            String path = selFile.getAbsolutePath();

            try {
                image = ImageIO.read(selFile);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'image sélectionnée
            ImageExamen.setIcon(new ImageIcon(image));

            ImageExamen.setVisible(false);
            jTabbedPane1.setSelectedIndex(3);
            NumArchivageChamp.setText(numArchivagenew.getText());
            Icon imageAff = ImageExamen.getIcon();
            ImageATraiter.setIcon(imageAff);
        }


    }//GEN-LAST:event_ChoixImageActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ChampIdPatient.getText().equals("") || ChampPrenomPatient.getText().equals("") || ChampNomPatient.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Remplissez les champ idPatient, nom et prénom");
            System.out.println(ChampIdPatient.equals(null));
        } else {
            jTabbedPane1.setEnabledAt(2, true);
            pageAnt = 2;
            String nom = ChampNomPatient.getText();
            String prenom = ChampPrenomPatient.getText();
            String idP = ChampIdPatient.getText();
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                if (pbd.rechIdPatients(idP, nom, prenom)) {
                    jTabbedPane1.setSelectedIndex(2);
                    ChampNom.setText(nom);//On remplit le champ nom
                    ChampPrenom.setText(prenom);//On remplit le champ prennom
                    ChampidPatient.setText(idP);//On remplit le champ identifiant patient
                    ChampAdress.setText(pbd.recupAdresse(idP));//on recherche l'adresse correspondate à l'identifiant patient
                    ChampNaissance.setText(pbd.recupDateN(idP).toString());
                    ChampSexe.setText(pbd.recupSexe(idP));
                    System.out.println(pbd.recupSexe(idP));
                    //Création d'un format timestamp avec la date du système
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    String date = dtf.format(LocalDateTime.now());
                    System.out.println("yyyy-MM-dd HH:mm:ss-> " + date);
                    DateExamen.setText(date);//on remplit le champ date examen

                    ExamenBD exam = null;
                    try {
                        exam = new ExamenBD();
                    } catch (SQLException ex) {
                        Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String idExam = null;
                    try {
                        idExam = exam.GenererIdEXam();
                        exam.insererExamen(idExam, idP, identifiantPro.getText(), ChoixExamen.getSelectedItem().toString(), "", date, 0);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    idexamen.setText(idExam);

                    PersonnelBD persobd = null;
                    persobd = new PersonnelBD();
                    nomPH.setText(persobd.recupNom(identifiantPro.getText()));
                    prenomPH.setText(persobd.recupPrenom(identifiantPro.getText()));

                } else {
                    JOptionPane.showMessageDialog(this, "Ce patient n'existe pas");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexionActionPerformed
        Connexion a = new Connexion();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deconnexionActionPerformed

    private void RechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercherActionPerformed
        String nomPat = ChampNomPatient.getText().toUpperCase();
        String prenomPat = ChampPrenomPatient.getText();
        String idPat = ChampIdPatient.getText().toString();
        String type = NomExamen.getSelectedItem().toString();

        //Recherche par nom et prenom du patient
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (idPat.equals("")) && (type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();

            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                liste = exam.rechExamNomPrenom(prenomPat, nomPat, liste);
                System.out.println(liste);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);
            Tableau.repaint();

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }

        //Recherche par nom prenom id
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (!idPat.equals("")) && (type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                liste = exam.rechExamNomPrenomId(idPat, prenomPat, nomPat, liste);
                System.out.println(liste);

            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(prenomPat);
            Tableau.setModel(liste);
            Tableau.repaint();
            System.out.println(prenomPat);

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }

        //Recherche par nom prenom id type
        if ((!nomPat.equals("")) && (!prenomPat.equals("")) && (!idPat.equals("")) && (!type.equals("  "))) {
            ExamenBD exam = null;

            try {
                exam = new ExamenBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("IdPatient");
            liste.addColumn("Nom Patient");
            liste.addColumn("Prénom Patient");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            liste.addColumn("IdExamen");
            liste.addColumn("Type d'examen");
            liste.addColumn("Date examen");
            liste.addColumn("Nom Practicien");
            liste.addColumn("Prénom Practicien");

            try {
                //liste= exam.rechExamNomPrenomIdType(idPat,prenomPat, nomPat,type, liste);
                liste = exam.rechExamNomPrenomIdType(idPat, prenomPat, nomPat, type, liste);
                System.out.println("nom prenom id type " + liste);
                System.out.println(liste);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);
            Tableau.repaint();

            //JOptionPane.showMessageDialog(this, "Examen trouvé");
        }

        
    }//GEN-LAST:event_RechercherActionPerformed

    private void Retour2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Retour2ActionPerformed

    private void ImageExamenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ImageExamenMouseClicked


    }//GEN-LAST:event_ImageExamenMouseClicked

    private void InverserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InverserActionPerformed
        // Flip the ImageBD horizontally
        Icon icon = ImageATraiter.getIcon();
        image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);

        AffineTransform tx = AffineTransform.getScaleInstance(-1, 1);
        tx.translate(-image.getWidth(null), 0);
        AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        image = op.filter(image, null);

        ImageIcon Newicon = new ImageIcon(image);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_InverserActionPerformed

    private void Retour3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setEnabledAt(4, false);
        titreCR.setText("");
        RedactionResultat.setText("");
        redactionObservation.setText("");
        jTabbedPane1.setSelectedIndex(1);
        if (pageAnt == 2) {
            jTabbedPane1.setSelectedIndex(2);
            jTabbedPane1.setEnabledAt(4, false);

        }
        if (pageAnt == 1) {
            jTabbedPane1.setSelectedIndex(1);
            jTabbedPane1.setEnabledAt(4, false);
        }

    }//GEN-LAST:event_Retour3ActionPerformed

    private void EnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerActionPerformed

        //Examen exam = new Examen();//création d'un examen vide
        System.out.println(idexam.getText());
        String titre = titreCR.getText();
        String resultat = RedactionResultat.getText();
        String observation = redactionObservation.getText();

        CompteRendu CR = new CompteRendu(titre, observation, resultat);
        String cr = CR.toStringCompteRendu();
        System.out.println("ça marche");
        try {

            ExamenBD examen = new ExamenBD();

            examen.updateCR(cr, idexam.getText());
            examen.updateStatus(idexam.getText());
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Compte rendu ajouté à l'examen");


    }//GEN-LAST:event_EnregistrerActionPerformed

    private void RedigerCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedigerCRActionPerformed
        jTabbedPane1.setSelectedIndex(4);
        idexam.setText(idexamen.getText());

    }//GEN-LAST:event_RedigerCRActionPerformed

    private void RotationHoraireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotationHoraireActionPerformed
        Icon icon = ImageATraiter.getIcon();
        image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);
        image = rotateImage(image);

        ImageIcon Newicon = new ImageIcon(image);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_RotationHoraireActionPerformed

    private void TableauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauMouseClicked
        if (evt.getClickCount() == 2) { // détection du double clique
            JTable cible = (JTable) evt.getSource();
            int ligne = cible.getSelectedRow(); //ligne du tableau sélectionnée.
            int col = Tableau.getColumnCount();
            //System.out.println(col);
            String idPat = Tableau.getValueAt(ligne, col - 10).toString();
            String nomPat = Tableau.getValueAt(ligne, col - 9).toString();
            String prenomPat = Tableau.getValueAt(ligne, col - 8).toString();
            String sexe = Tableau.getValueAt(ligne, col - 7).toString();
            String dateN = Tableau.getValueAt(ligne, col - 6).toString();
            String idExam = Tableau.getValueAt(ligne, col - 5).toString();
            String type = Tableau.getValueAt(ligne, col - 4).toString();
            String dateE = Tableau.getValueAt(ligne, col - 3).toString();
            String nomPro = Tableau.getValueAt(ligne, col - 2).toString();
            String prenomPro = Tableau.getValueAt(ligne, col - 1).toString();

            jTabbedPane1.setEnabledAt(1, true);
            pageAnt = 1;
            jTabbedPane1.setSelectedIndex(1);
            ChampNom1.setText(nomPat);
            ChampPrenom1.setText(prenomPat);
            ChampSexe1.setText(sexe);
            //ChampAdresse
            ChampDateNaissance.setText(dateN);
            ChampIdPatient1.setText(idPat);
            ChampTypeExamen.setText(type);
            ChampDate.setText(dateE);
            ChampPrenomPraticien.setText(prenomPro);
            ChampNomPraticien.setText(nomPro);
            ChampIdExamen.setText(idExam);

            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                ChampAdresse.setText(pbd.recupAdresse(idPat));
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            ExamenBD exam = null;
            String compteRendu = "";
            try {
                exam = new ExamenBD();

                //JOptionPane.showMessageDialog(null, prenomPro);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                compteRendu = exam.recupContenuCR1(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextArea2.setText(compteRendu);
            jTextArea2.repaint();
            //liste des images de l'examen
            ImageBD i = null;
            i = new ImageBD();
            DefaultListModel l = null;
            try {
                l = i.listImage(ChampIdExamen.getText());
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            listeImage.setModel(l);


        }
    }//GEN-LAST:event_TableauMouseClicked

    private void Enregistrer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Enregistrer1ActionPerformed
        File newFile = new File("./src/ImagePatient/" + selFile.getName() + "_" + NumArchivageChamp.getText() + ".jpg");//création d'un nouveau fichier'

        try {
            ImageIO.write(image, "jpg", newFile);//stockage de l'image traité dans le dossier imagePatient
        } catch (IOException e) {
        }

        //création d'un inputStream à partir du fichier
        //BufferedImage image = ImageIO.read(url);
        //ByteArrayOutputStream os = new ByteArrayOutputStream();
        //ImageIO.write(image, "jpg", os);
        //InputStream input = new ByteArrayInputStream(os.toByteArray());
        FileInputStream input = null;
        try {
            input = new FileInputStream(newFile);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);

        }
        BdConnection bd = null;
        try {
            bd = new BdConnection();

        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        //creation de la requête
        Connection conn = bd.getConnexion();

        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement("insert into PACS values(?,?,?)");
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            //id
            ps.setInt(1, Integer.parseInt(NumArchivageChamp.getText()));
            ps.setString(2, idexamen.getText());
            ps.setBinaryStream(3, (InputStream) input, (int) newFile.length());

        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            //exécution de la requête
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Image insérée avec succès!");
        try {
            //fermer le preparedStatement
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            //fermer la connexion
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*String path = selFile.getAbsolutePath();
         Image image = null;
         try {
         image = ImageIO.read(selFile);
         } catch (IOException ex) {ssh
         Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
         }  */
        selFile.delete();
        selFile = null;
        ImageATraiter.setIcon(null);
        NumArchivageChamp.setText("");

        JOptionPane.showMessageDialog(this, "Image enregistrée");
        
    }//GEN-LAST:event_Enregistrer1ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        ExamenBD exam = null;
        try {
            exam = new ExamenBD();
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        try {
            liste = exam.listeExam(liste);
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);

        Tableau.repaint();
        ChampNomPatient.setText("");
        ChampPrenomPatient.setText("");
        ChampIdPatient.setText("");
        NomExamen.setSelectedIndex(0);
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void RedigerCR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedigerCR1ActionPerformed

// TODO add your handling code here:
        PersonnelBD personnel = null;
        try {
            personnel = new PersonnelBD();
        } catch (SQLException ex) {
        }
        String idExam = this.ChampIdExamen.getText();
        String idPatient = this.ChampidPatient.getText();
        String idPro = identifiantPro.getText();
        String nomPH = "";
        String prenomPH = "";
        try {
            nomPH = personnel.recupNomPerso(idPro);
            prenomPH = personnel.recupPrenom(idPro);
            System.out.println(nomPH);
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        ChampPrenomPraticien.setText(prenomPH);
        ChampNomPraticien.setText(nomPH);

        String choix = (String) this.ChoixExamen.getSelectedItem();
        CompteRendu cr = new CompteRendu("", "", "");

        String dateE = ChampDate.getText();

        ExamenBD exam = null;
        try {
            exam = new ExamenBD();
            exam.updateIdpro(idPro, idExam);
        } catch (SQLException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }

        jTabbedPane1.setSelectedIndex(4);
        idexam.setText(idExam);


    }//GEN-LAST:event_RedigerCR1ActionPerformed

    private void listeImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listeImageMouseClicked
        if (evt.getClickCount() == 1) {
            String numString = listeImage.getSelectedValue().toString();
            System.out.println("num " + numString);
            int num = Integer.parseInt(numString);

            ImageBD i = null;
            i = new ImageBD();
            InputStream image = null;
            try {
                image = i.recupImage(num);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedImage imageAffichage = null;
            try {
                imageAffichage = ImageIO.read(image);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //ouverture de l'image sélectionnée
            JDialog d = new JDialog(this, "Image sélectionnée");
            d.setSize(300, 300);

            JLabel l = new JLabel("Ceci est une boite de dialogue.");
            // Ajouter l'étiquette à la boîte de dialogue
            d.add(l);
            d.setLocation(650, 400);

            JLabel label = new JLabel(new ImageIcon(imageAffichage));
            d.add(label);

            d.setVisible(true);

        }
    }//GEN-LAST:event_listeImageMouseClicked

    private void listeImageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listeImageKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeImageKeyPressed

    private void NomExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomExamenActionPerformed


        
    }//GEN-LAST:event_NomExamenActionPerformed

    private void AjoutImagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutImagActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File("./src/jpg"));

        //filtrer les fichiers
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);
        //si l'utilisateur clique sur enregistrer dans Jfilechooser
        if (res == JFileChooser.APPROVE_OPTION) {
            this.selFile = file.getSelectedFile();

            FileInputStream input = null;
            try {
                input = new FileInputStream(selFile);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);

            }
            BdConnection bd = null;
            try {
                bd = new BdConnection();

            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            //creation de la requête
            Connection conn = bd.getConnexion();

            //création d'un identifiant pacs    
            IdPacs idImage = null;
            try {
                idImage = new IdPacs(conn);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'idPacs
            numArchivagenew.setText(Integer.toString(idImage.getIdPacs()));

            String path = selFile.getAbsolutePath();

            try {
                image = ImageIO.read(selFile);
            } catch (IOException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
            //affichage de l'image sélectionnée
            ImageExamen.setIcon(new ImageIcon(image));

            ImageExamen.setVisible(false);
            jTabbedPane1.setSelectedIndex(3);
            NumArchivageChamp.setText(numArchivagenew.getText());
            Icon imageAff = ImageExamen.getIcon();
            ImageATraiter.setIcon(imageAff);
        }

    }//GEN-LAST:event_AjoutImagActionPerformed

    private void ReinitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReinitialiserActionPerformed
        Icon icon = ImageATraiter.getIcon();
        image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        icon.paintIcon(null, image.getGraphics(), 0, 0);

        String path = selFile.getAbsolutePath();

        try {
            image = ImageIO.read(selFile);
        } catch (IOException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        //affichage de l'image sélectionnée
        ImageExamen.setIcon(new ImageIcon(image));

        ImageIcon Newicon = new ImageIcon(image);
        ImageATraiter.setIcon(Newicon);
    }//GEN-LAST:event_ReinitialiserActionPerformed

    private void ConsulterDMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsulterDMRActionPerformed
 if (ChampIdPatient.getText().equals("") || ChampPrenomPatient.getText().equals("") || ChampNomPatient.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Remplissez les champ idPatient, nom et prénom");
            System.out.println(ChampIdPatient.equals(null));
        } else {
     
        int nbligne = Tableau.getRowCount();

        int col = Tableau.getColumnCount();//nombre de colonnes
        String nomP = ChampNomPatient.getText();
        String prenomP = ChampPrenomPatient.getText();
        String idPat = ChampIdPatient.getText();
        String sexe = Tableau.getValueAt(0, col - 7).toString();
        String dateN = Tableau.getValueAt(0, col - 6).toString();

        String titre = "";

        if (sexe.equals('M')) {
            titre = "Monsieur";
        } else {
            titre = "Madame";
        }

        String DMR = "";
        DMR += "DMR de " + titre + " " + prenomP + " " + nomP + "\n" + "Identifiant du patient : " + idPat + "\n" + "Date de naissance : " + dateN + "\n";
        DMR += "_______________________________________________________________________________________" + "\n" + "\n";
        //On récupère les infos des examens qui sont dans le tableau
        for (int ligne = 0; ligne < nbligne; ligne++) {
            String idExam = Tableau.getValueAt(ligne, col - 5).toString();

            String type = Tableau.getValueAt(ligne, col - 4).toString();
            String prenomPro = Tableau.getValueAt(ligne, col - 1).toString();
            String nomPro = Tableau.getValueAt(ligne, col - 2).toString();
            String dateE = Tableau.getValueAt(ligne, col - 3).toString();

            //On récupère la date de l'examen et le cr et les numéro d'archivages
            ExamenBD ebd = null;

            String dateFormat = "";
            String cr = "";
            String listeNumeros = "";

            /*Date date=new Date(dateE);

             SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd hh:mm");
             dateFormat = formater.format(date);*/
            try {
                ebd = new ExamenBD();
                cr = ebd.recupContenuCR1(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                listeNumeros = ebd.recupNumeroArchivage(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DMR += "Examen " + (ligne + 1) + "\n";
            DMR += "Date de l'examen : " + dateE + "\n";
            DMR += "Identifiant de l'examen : " + idExam + "\n" + "Type : " + type + "\n" + " Prénom du praticien :" + prenomPro + "\n" + "Nom du praticien : " + nomPro + "\n";
            DMR += "Compte-rendu : " + "\n" + cr + "\n";
            DMR += "Lien vers le PACS : " + "\n" + listeNumeros + "\n";

        }

        jTabbedPane1.setSelectedIndex(5);
        TexteApercu1.setText(DMR);
       ConsulterDMR.setEnabled(false);
 }
    }//GEN-LAST:event_ConsulterDMRActionPerformed

    private void Imprimer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimer1ActionPerformed
        //pour pouvoir imprimer
        //Code permettant l'ouverture d'une fenetre qui permet d'imprimer la fiche de soin ou de la convertir en PDF
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");
        job.setPrintable(new Printable() {

            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(1.1, 1.1);

                TexteApercu1.paint(g2);
                return Printable.PAGE_EXISTS;
            }

        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_Imprimer1ActionPerformed

    private void Retour5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour5ActionPerformed
        TexteApercu1.setText("");
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_Retour5ActionPerformed

    private void Retour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour1ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
       /*        ExamenBD exam=null;
        try {
            exam = new ExamenBD();
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("IdPatient");
        liste.addColumn("Nom Patient");
        liste.addColumn("Prénom Patient");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        liste.addColumn("IdExamen");
        liste.addColumn("Type d'examen");
        liste.addColumn("Date examen");
        liste.addColumn("Nom Practicien");
        liste.addColumn("Prénom Practicien");

        try {
            liste = exam.listeExam(liste);
        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);
        Tableau.setDefaultEditor(Object.class, null);
        Tableau.repaint();
        ChampNom.setText("");
        ChampPrenom.setText("");
        ChampAdress.setText("");*/
    }//GEN-LAST:event_Retour1ActionPerformed

    private void EnregistrerDMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerDMRActionPerformed
          String nomPat = ChampNomPatient.getText();
        String prenomPat = ChampPrenomPatient.getText();
        String idPat = ChampIdPatient.getText();
        Document document = new Document();

        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("./src/DMRPatients/DMR_" + nomPat + "_" + prenomPat + "_" + idPat + " .pdf"));
            document.open();
            document.add(new Paragraph(TexteApercu1.getText()));
            document.close();
            writer.close();
        } catch (DocumentException | FileNotFoundException e) {
        }
    }//GEN-LAST:event_EnregistrerDMRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new PHRadio().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Accueil;
    private javax.swing.JLabel Adress;
    private javax.swing.JLabel Adress1;
    private javax.swing.JButton AjoutImag;
    private javax.swing.JPanel AjouterExamen;
    private javax.swing.JPanel AjouterImage;
    private javax.swing.JLabel ApercuAvantImpression1;
    private javax.swing.JPanel ApercuAvantImpressionJPanel2;
    private javax.swing.JPanel ApercuAvantImpressionJPanel3;
    private javax.swing.JLabel CR1;
    private javax.swing.JLabel CR2;
    private javax.swing.JLabel ChampAdress;
    private javax.swing.JLabel ChampAdresse;
    private javax.swing.JLabel ChampDate;
    private javax.swing.JLabel ChampDateNaissance;
    private javax.swing.JLabel ChampIdExamen;
    private javax.swing.JTextField ChampIdPatient;
    private javax.swing.JLabel ChampIdPatient1;
    private javax.swing.JLabel ChampNaissance;
    private javax.swing.JLabel ChampNom;
    private javax.swing.JLabel ChampNom1;
    private javax.swing.JTextField ChampNomPatient;
    private javax.swing.JLabel ChampNomPraticien;
    private javax.swing.JLabel ChampPrenom;
    private javax.swing.JLabel ChampPrenom1;
    private javax.swing.JTextField ChampPrenomPatient;
    private javax.swing.JLabel ChampPrenomPraticien;
    private javax.swing.JLabel ChampSexe;
    private javax.swing.JLabel ChampSexe1;
    private javax.swing.JLabel ChampTypeExamen;
    private javax.swing.JLabel ChampidPatient;
    private javax.swing.JComboBox<String> ChoixExamen;
    private javax.swing.JButton ChoixImage;
    private javax.swing.JLabel ConnecteEnTantQUE;
    private javax.swing.JLabel ConnecteEnTantQUe1;
    private javax.swing.JLabel ConnecteEnTantQue;
    private javax.swing.JLabel ConnecteEnTantQue1;
    private javax.swing.JLabel ConnecteEnTantQue2;
    private javax.swing.JButton ConsulterDMR;
    private javax.swing.JPanel ConsulterExamen;
    private javax.swing.JPanel CritèreRecherchePannel;
    private javax.swing.JLabel Date;
    private javax.swing.JLabel DateExamen;
    private javax.swing.JLabel DateNaissance;
    private javax.swing.JLabel DateNaissance1;
    private javax.swing.JButton Enregistrer;
    private javax.swing.JButton Enregistrer1;
    private javax.swing.JButton EnregistrerDMR;
    private javax.swing.JLabel IDEXAMENJLABEL;
    private javax.swing.JLabel ImageATraiter;
    private javax.swing.JLabel ImageExamen;
    private javax.swing.JButton Imprimer1;
    private javax.swing.JPanel InfoExamen;
    private javax.swing.JPanel InfoExamen1;
    private javax.swing.JPanel InfoPatient;
    private javax.swing.JPanel InfoPatient1;
    private javax.swing.JPanel InfoPatient2;
    private javax.swing.JButton Inverser;
    private javax.swing.JLabel ListeEnsembleExamen;
    private javax.swing.JLabel Nom;
    private javax.swing.JLabel Nom1;
    private javax.swing.JComboBox<String> NomExamen;
    private javax.swing.JLabel NomPatient;
    private javax.swing.JLabel NomPraticien;
    private javax.swing.JLabel NomPrenomUtilisateur1;
    private javax.swing.JLabel NomPrenomUtilisateur3;
    private javax.swing.JLabel NomPrenomUtilisateurAccueil;
    private javax.swing.JLabel NomPrenonUtilisateur;
    private javax.swing.JLabel NomUtilisateur;
    private javax.swing.JLabel NumArchivage;
    private javax.swing.JTextField NumArchivageChamp;
    private javax.swing.JPanel PanelBas;
    private javax.swing.JPanel PanelHaut;
    private javax.swing.JPanel PanelHaut1;
    private javax.swing.JPanel PanelHaut2;
    private javax.swing.JPanel PanelListeEnsembleExamen;
    private javax.swing.JPanel PanelListeEnsembleExamen1;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JPanel PanelPrincipal1;
    private javax.swing.JPanel PanelPrincipal2;
    private javax.swing.JPanel PanelTitre1;
    private javax.swing.JPanel PanelTitre2;
    private javax.swing.JLabel Prenom;
    private javax.swing.JLabel Prenom1;
    private javax.swing.JLabel PrenomPatient;
    private javax.swing.JLabel PrenomPraticien;
    private javax.swing.JPanel Principal;
    private javax.swing.JButton Rechercher;
    private javax.swing.JPanel RedactionCR;
    private javax.swing.JTextArea RedactionResultat;
    private javax.swing.JButton RedigerCR;
    private javax.swing.JButton RedigerCR1;
    private javax.swing.JButton Reinitialiser;
    private javax.swing.JButton Retour1;
    private javax.swing.JButton Retour2;
    private javax.swing.JButton Retour3;
    private javax.swing.JButton Retour5;
    private javax.swing.JButton RotationHoraire;
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JScrollPane ScrollTableau;
    private javax.swing.JLabel Sexe;
    private javax.swing.JLabel Sexe1;
    private javax.swing.JTable Tableau;
    private javax.swing.JTextPane TexteApercu1;
    private javax.swing.JLabel Titre;
    private javax.swing.JLabel Titre1;
    private javax.swing.JLabel TitreAjoutExamen;
    private javax.swing.JPanel TraitementImage;
    private javax.swing.JLabel TypeExamen;
    private javax.swing.JLabel TypeExamen1;
    private javax.swing.JLabel TypeExamen2;
    private javax.swing.JButton deconnexion;
    private javax.swing.JLabel idEXAMEN;
    private javax.swing.JLabel idExamen;
    private javax.swing.JLabel idPatient;
    private javax.swing.JLabel idPatient1;
    private javax.swing.JLabel idPatient2;
    private javax.swing.JLabel identifiantPro;
    private javax.swing.JLabel idexam;
    private javax.swing.JLabel idexamen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel labelObservation;
    private javax.swing.JLabel labelResultat;
    private javax.swing.JLabel labelTitre;
    private javax.swing.JList listeImage;
    private javax.swing.JLabel nomPH;
    private javax.swing.JLabel numArchivagenew;
    private javax.swing.JScrollPane panelRedactionObservation;
    private javax.swing.JScrollPane panelResultat;
    private javax.swing.JLabel prenomPH;
    private javax.swing.JTextArea redactionObservation;
    private javax.swing.JTextField titreCR;
    // End of variables declaration//GEN-END:variables
}
