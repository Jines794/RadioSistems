/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BD.ExamenBD;
import BD.PatientsBD;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import NOYAU.Genre;
import NOYAU.Interoperabilite;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JTable;
import library.interfaces.Patient;

/**
 *
 * @author sosso
 */
public class SecMedicale extends javax.swing.JFrame {
private final static Interoperabilite inter = new Interoperabilite();
    /**
     * Creates new form Accueil
     */
    public SecMedicale() throws SQLException {
        PatientsBD pbd1 = new PatientsBD();
        initComponents();
        jTabbedPane1.setEnabledAt(3, false);
        jTabbedPane1.setEnabledAt(4, false);

        nomRecherche.setVisible(false);
        jLabelNomRecherche.setVisible(false);

        prenomRecherche.setVisible(false);
        jLabelPrenomRecherche.setVisible(false);

        idRecherche.setVisible(false);
        jLabelIdentifiant.setVisible(false);

        dateRecherche.setVisible(false);
        jLabelDateRecherche.setVisible(false);

        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("ID");
        liste.addColumn("Nom");
        liste.addColumn("Prénom");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        liste = pbd1.listePatientModel(liste);
        Tableau.setModel(liste);

        Tableau.repaint();

        Tableau.setDefaultEditor(Object.class, null);
        Tableau1.setDefaultEditor(Object.class, null);

        setIcone();

    }

    public void setIcone() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo Radiosistem2.jpeg")));

    }



    public JLabel getjLabel5() {
        return jLabel5;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        Retour = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabelNomRecherche = new javax.swing.JLabel();
        nomRecherche = new javax.swing.JTextField();
        jLabelPrenomRecherche = new javax.swing.JLabel();
        prenomRecherche = new javax.swing.JTextField();
        Recherche = new javax.swing.JButton();
        jLabelDateRecherche = new javax.swing.JLabel();
        dateRecherche = new javax.swing.JFormattedTextField();
        choixCritere = new javax.swing.JComboBox();
        jLabelIdentifiant = new javax.swing.JLabel();
        idRecherche = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tableau = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        PanelHaut = new javax.swing.JPanel();
        Retour1 = new javax.swing.JButton();
        Panelmilieu = new javax.swing.JPanel();
        AjoutNewPatient = new javax.swing.JLabel();
        Panelmilieu1 = new javax.swing.JPanel();
        PanelBas = new javax.swing.JPanel();
        dmr = new javax.swing.JLabel();
        MessageDMRtext = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        AjouterPatient = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        NomPatient = new javax.swing.JLabel();
        ChampNom = new javax.swing.JTextField();
        PrenomPatient = new javax.swing.JLabel();
        ChampPrenom = new javax.swing.JTextField();
        Sexe = new javax.swing.JLabel();
        Feminin = new javax.swing.JRadioButton();
        Masculin = new javax.swing.JRadioButton();
        DateNaissa = new javax.swing.JLabel();
        DateNaissanceChamp = new javax.swing.JFormattedTextField();
        Adresse = new javax.swing.JLabel();
        ChampAdresse = new javax.swing.JTextField();
        CodePostal = new javax.swing.JLabel();
        ChampCodePostal = new javax.swing.JFormattedTextField();
        ChampVille = new javax.swing.JTextField();
        Ville = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        Nom = new javax.swing.JLabel();
        Prenom = new javax.swing.JLabel();
        DateNaissance = new javax.swing.JLabel();
        Sexe1 = new javax.swing.JLabel();
        Adresse1 = new javax.swing.JLabel();
        idPatient = new javax.swing.JLabel();
        ChampNom1 = new javax.swing.JLabel();
        ChampPrenom1 = new javax.swing.JLabel();
        ChampDateNaissance = new javax.swing.JLabel();
        ChampSexe = new javax.swing.JLabel();
        ChampAdresse1 = new javax.swing.JLabel();
        ChampIdPaitient = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Retour2 = new javax.swing.JButton();
        PanelHaut1 = new javax.swing.JPanel();
        PanelHaut2 = new javax.swing.JPanel();
        PanelHaut3 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        Titre = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        TableauSccroll = new javax.swing.JScrollPane();
        Tableau1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        ApercuAvantImpressionJPanel = new javax.swing.JPanel();
        Retour3 = new javax.swing.JButton();
        ApercuAvantImpression = new javax.swing.JLabel();
        ApercuAvantImpressionJPanel1 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        TexteApercu = new javax.swing.JTextPane();
        jPanel24 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Imprimer = new javax.swing.JButton();
        Enregistrer = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        ApercuAvantImpressionJPanel2 = new javax.swing.JPanel();
        Retour4 = new javax.swing.JButton();
        ApercuAvantImpression1 = new javax.swing.JLabel();
        ApercuAvantImpressionJPanel3 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        ScrollPane1 = new javax.swing.JScrollPane();
        TexteApercu1 = new javax.swing.JTextPane();
        jPanel26 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Imprimer1 = new javax.swing.JButton();
        Imprimer2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1751, 1678));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setBackground(new java.awt.Color(255, 102, 0));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Rechercher un patient");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Seuad KASSA");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Connecté en tant que :");

        jPanel12.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/secretaire medical.png"))); // NOI18N

        Retour.setBackground(new java.awt.Color(204, 255, 204));
        Retour.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour.setText("Déconnexion");
        Retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour)
                .addGap(31, 31, 31))
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(326, 326, 326)
                .addComponent(jLabel11)
                .addGap(172, 172, 172)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(81, 81, 81)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(Retour, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(132, 132, 132))
        );

        jPanel11.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Critères de recherche", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        jLabelNomRecherche.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelNomRecherche.setText("Nom patient:");

        nomRecherche.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nomRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomRechercheActionPerformed(evt);
            }
        });

        jLabelPrenomRecherche.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelPrenomRecherche.setText("Prénom patient :");

        prenomRecherche.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        prenomRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomRechercheActionPerformed(evt);
            }
        });

        Recherche.setBackground(new java.awt.Color(204, 255, 204));
        Recherche.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Recherche.setText("Rechercher");
        Recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercheActionPerformed(evt);
            }
        });

        jLabelDateRecherche.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelDateRecherche.setText("Date de naissance:");

        dateRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateRechercheActionPerformed(evt);
            }
        });

        choixCritere.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        choixCritere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Par identifiant", "Par nom, prénom", "Par nom, prénom, date de naissance", "Tout" }));
        choixCritere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixCritereActionPerformed(evt);
            }
        });

        jLabelIdentifiant.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelIdentifiant.setText("Identifiant :");

        idRecherche.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelNomRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPrenomRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(prenomRecherche))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabelDateRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(Recherche))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabelIdentifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(idRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(choixCritere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomRecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nomRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIdentifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choixCritere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenomRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrenomRecherche)
                    .addComponent(jLabelDateRecherche)
                    .addComponent(dateRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Recherche))
                .addContainerGap())
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/coeur main.png"))); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap(403, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jLabel12)
                .addGap(182, 182, 182))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGap(0, 42, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Tableau.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 255), null, null));
        Tableau.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Tableau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"0102020", "BOBO", "Paul", "Masculin", "06/01/1980"},
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "idPatient", "Nom Patient", "Prénom Patient", "Sexe", "Date de naissance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tableau.getTableHeader().setResizingAllowed(false);
        Tableau.getTableHeader().setReorderingAllowed(false);
        Tableau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tableau);

        jScrollPane2.setViewportView(jScrollPane1);

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Recevoir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Ajouter patient");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(200, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(747, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1746, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1798, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Accueil", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        PanelHaut.setBackground(new java.awt.Color(255, 255, 255));

        Retour1.setBackground(new java.awt.Color(204, 255, 204));
        Retour1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour1.setText("Retour");
        Retour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour1ActionPerformed(evt);
            }
        });

        Panelmilieu.setBackground(new java.awt.Color(255, 102, 0));
        Panelmilieu.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        javax.swing.GroupLayout PanelmilieuLayout = new javax.swing.GroupLayout(Panelmilieu);
        Panelmilieu.setLayout(PanelmilieuLayout);
        PanelmilieuLayout.setHorizontalGroup(
            PanelmilieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelmilieuLayout.setVerticalGroup(
            PanelmilieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        AjoutNewPatient.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        AjoutNewPatient.setForeground(new java.awt.Color(255, 102, 0));
        AjoutNewPatient.setText("Ajout d'un nouveau patient");

        Panelmilieu1.setBackground(new java.awt.Color(255, 102, 0));
        Panelmilieu1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        javax.swing.GroupLayout Panelmilieu1Layout = new javax.swing.GroupLayout(Panelmilieu1);
        Panelmilieu1.setLayout(Panelmilieu1Layout);
        Panelmilieu1Layout.setHorizontalGroup(
            Panelmilieu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Panelmilieu1Layout.setVerticalGroup(
            Panelmilieu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 7, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelHautLayout = new javax.swing.GroupLayout(PanelHaut);
        PanelHaut.setLayout(PanelHautLayout);
        PanelHautLayout.setHorizontalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHautLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
            .addComponent(Panelmilieu1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Panelmilieu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelHautLayout.createSequentialGroup()
                .addContainerGap(660, Short.MAX_VALUE)
                .addComponent(AjoutNewPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(529, 529, 529))
        );
        PanelHautLayout.setVerticalGroup(
            PanelHautLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHautLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                .addComponent(Panelmilieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(AjoutNewPatient)
                .addGap(18, 18, 18)
                .addComponent(Panelmilieu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelBas.setBackground(new java.awt.Color(255, 255, 255));

        dmr.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        dmr.setForeground(new java.awt.Color(255, 0, 0));
        dmr.setText("DMR");
        dmr.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        MessageDMRtext.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        MessageDMRtext.setText("Un DMR est directement créé lors de l'ajout d'un nouveau patient dans le SIR");

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PATIENT AJOUT.jpg"))); // NOI18N

        AjouterPatient.setBackground(new java.awt.Color(153, 255, 153));
        AjouterPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        AjouterPatient.setText("Enregistrer patient");
        AjouterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(AjouterPatient))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel10)))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(AjouterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        NomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        NomPatient.setText("Nom    :");

        PrenomPatient.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        PrenomPatient.setText("Prénom :");

        Sexe.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe.setText("Sexe");

        Feminin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Feminin.setText("Féminin");
        Feminin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemininActionPerformed(evt);
            }
        });

        Masculin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Masculin.setText("Masculin");

        DateNaissa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissa.setText("Date de naissance :");

        DateNaissanceChamp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        DateNaissanceChamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateNaissanceChampActionPerformed(evt);
            }
        });

        Adresse.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adresse.setText("Adresse :");

        ChampAdresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChampAdresseActionPerformed(evt);
            }
        });

        CodePostal.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        CodePostal.setText("Code Postal : ");

        try {
            ChampCodePostal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        Ville.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Ville.setText("Ville :");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(NomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChampNom, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(PrenomPatient)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ChampPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(DateNaissa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DateNaissanceChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                        .addComponent(Sexe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Feminin)
                        .addGap(18, 18, 18)
                        .addComponent(Masculin)
                        .addGap(81, 81, 81))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CodePostal)
                                    .addComponent(Adresse))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                                .addComponent(Ville)
                                .addGap(19, 19, 19)))
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChampAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChampCodePostal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChampVille, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChampNom)
                        .addComponent(Sexe)
                        .addComponent(Feminin)
                        .addComponent(Masculin))
                    .addComponent(NomPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrenomPatient)
                    .addComponent(ChampPrenom))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateNaissa)
                    .addComponent(DateNaissanceChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adresse)
                    .addComponent(ChampAdresse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodePostal)
                    .addComponent(ChampCodePostal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ville, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout PanelBasLayout = new javax.swing.GroupLayout(PanelBas);
        PanelBas.setLayout(PanelBasLayout);
        PanelBasLayout.setHorizontalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBasLayout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBasLayout.createSequentialGroup()
                        .addComponent(MessageDMRtext, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBasLayout.createSequentialGroup()
                        .addComponent(dmr, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(278, 278, 278)))
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelBasLayout.setVerticalGroup(
            PanelBasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBasLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(dmr, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(MessageDMRtext, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelHaut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(PanelHaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelBas, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 811, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ajouter un patient", jPanel2);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations Patient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        Nom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Nom.setText("Nom:");

        Prenom.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Prenom.setText("Prénom:");

        DateNaissance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DateNaissance.setText("Date de naissance:");

        Sexe1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Sexe1.setText("Sexe:");

        Adresse1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Adresse1.setText("Adresse:");

        idPatient.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        idPatient.setText("idPatient:");

        ChampNom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampNom1.setText("jLabel14");

        ChampPrenom1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampPrenom1.setText("jLabel15");

        ChampDateNaissance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampDateNaissance.setText("jLabel16");

        ChampSexe.setText("jLabel17");

        ChampAdresse1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ChampAdresse1.setText("jLabel18");

        ChampIdPaitient.setText("jLabel19");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(Nom)
                        .addGap(22, 22, 22)
                        .addComponent(ChampNom1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(Prenom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampPrenom1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(DateNaissance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChampDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(Sexe1)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Adresse1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(ChampSexe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                        .addComponent(idPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampIdPaitient, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(ChampAdresse1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChampIdPaitient)
                        .addComponent(idPatient))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Nom)
                                    .addComponent(ChampNom1))
                                .addComponent(ChampSexe, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(Sexe1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Prenom)
                                    .addComponent(ChampPrenom1))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DateNaissance)
                                    .addComponent(ChampDateNaissance)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ChampAdresse1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Adresse1))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/DOSSIER MED.png"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153)
                .addComponent(jLabel7)
                .addGap(219, 219, 219))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        Retour2.setBackground(new java.awt.Color(204, 255, 204));
        Retour2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour2.setText("Retour");
        Retour2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour2ActionPerformed(evt);
            }
        });

        PanelHaut1.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHaut1Layout = new javax.swing.GroupLayout(PanelHaut1);
        PanelHaut1.setLayout(PanelHaut1Layout);
        PanelHaut1Layout.setHorizontalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );
        PanelHaut1Layout.setVerticalGroup(
            PanelHaut1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        PanelHaut2.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHaut2Layout = new javax.swing.GroupLayout(PanelHaut2);
        PanelHaut2.setLayout(PanelHaut2Layout);
        PanelHaut2Layout.setHorizontalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHaut2Layout.setVerticalGroup(
            PanelHaut2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        PanelHaut3.setBackground(new java.awt.Color(255, 102, 0));

        javax.swing.GroupLayout PanelHaut3Layout = new javax.swing.GroupLayout(PanelHaut3);
        PanelHaut3.setLayout(PanelHaut3Layout);
        PanelHaut3Layout.setHorizontalGroup(
            PanelHaut3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelHaut3Layout.setVerticalGroup(
            PanelHaut3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        Titre.setBackground(new java.awt.Color(255, 255, 255));
        Titre.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Titre.setForeground(new java.awt.Color(255, 102, 0));
        Titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titre.setText("Consultation DMR");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(701, 701, 701)
                .addComponent(Titre, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(Titre)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        TableauSccroll.setAutoscrolls(true);
        TableauSccroll.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        Tableau1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Tableau1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Tableau1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "IdExamen", "Type d'examen", "Prénom du praticien", "Nom du praticien"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tableau1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tableau1MouseClicked(evt);
            }
        });
        TableauSccroll.setViewportView(Tableau1);

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Exporter le DMR ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TableauSccroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(jButton2)
                .addGap(52, 52, 52))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TableauSccroll, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)))
                .addGap(150, 150, 150))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addComponent(PanelHaut2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelHaut3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(1661, 1661, 1661)
                .addComponent(PanelHaut1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(PanelHaut2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PanelHaut3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelHaut1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(694, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Affichage du DMR", jPanel7);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        ApercuAvantImpressionJPanel.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanelLayout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel);
        ApercuAvantImpressionJPanel.setLayout(ApercuAvantImpressionJPanelLayout);
        ApercuAvantImpressionJPanelLayout.setHorizontalGroup(
            ApercuAvantImpressionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanelLayout.setVerticalGroup(
            ApercuAvantImpressionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Retour3.setBackground(new java.awt.Color(204, 255, 204));
        Retour3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour3.setText("Retour");
        Retour3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour3ActionPerformed(evt);
            }
        });

        ApercuAvantImpression.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ApercuAvantImpression.setForeground(new java.awt.Color(255, 51, 0));
        ApercuAvantImpression.setText("Impression DMR");
        ApercuAvantImpression.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ApercuAvantImpressionJPanel1.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel1Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel1);
        ApercuAvantImpressionJPanel1.setLayout(ApercuAvantImpressionJPanel1Layout);
        ApercuAvantImpressionJPanel1Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel1Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        ScrollPane.setViewportView(TexteApercu);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(503, Short.MAX_VALUE)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(264, 264, 264))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IMPRIMER.png"))); // NOI18N

        Imprimer.setBackground(new java.awt.Color(204, 255, 204));
        Imprimer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Imprimer.setText("Imprimer");
        Imprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimerActionPerformed(evt);
            }
        });

        Enregistrer.setBackground(new java.awt.Color(204, 255, 204));
        Enregistrer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Enregistrer.setText("Enregistrer");
        Enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Imprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Enregistrer)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(Imprimer)
                .addGap(42, 42, 42)
                .addComponent(Enregistrer)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ApercuAvantImpressionJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ApercuAvantImpressionJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Retour3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(696, 696, 696)
                        .addComponent(ApercuAvantImpression)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Retour3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ApercuAvantImpressionJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(ApercuAvantImpression)
                .addGap(29, 29, 29)
                .addComponent(ApercuAvantImpressionJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1013, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Impression DMR", jPanel13);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        ApercuAvantImpressionJPanel2.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel2Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel2);
        ApercuAvantImpressionJPanel2.setLayout(ApercuAvantImpressionJPanel2Layout);
        ApercuAvantImpressionJPanel2Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel2Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Retour4.setBackground(new java.awt.Color(204, 255, 204));
        Retour4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Retour4.setText("Retour");
        Retour4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Retour4ActionPerformed(evt);
            }
        });

        ApercuAvantImpression1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        ApercuAvantImpression1.setForeground(new java.awt.Color(255, 51, 0));
        ApercuAvantImpression1.setText("Visualiser un examen");
        ApercuAvantImpression1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ApercuAvantImpressionJPanel3.setBackground(new java.awt.Color(255, 102, 0));
        ApercuAvantImpressionJPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 3, true));

        javax.swing.GroupLayout ApercuAvantImpressionJPanel3Layout = new javax.swing.GroupLayout(ApercuAvantImpressionJPanel3);
        ApercuAvantImpressionJPanel3.setLayout(ApercuAvantImpressionJPanel3Layout);
        ApercuAvantImpressionJPanel3Layout.setHorizontalGroup(
            ApercuAvantImpressionJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ApercuAvantImpressionJPanel3Layout.setVerticalGroup(
            ApercuAvantImpressionJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        ScrollPane1.setViewportView(TexteApercu1);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IMPRIMER.png"))); // NOI18N

        Imprimer1.setBackground(new java.awt.Color(204, 255, 204));
        Imprimer1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Imprimer1.setText("Imprimer");
        Imprimer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimer1ActionPerformed(evt);
            }
        });

        Imprimer2.setBackground(new java.awt.Color(204, 255, 204));
        Imprimer2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Imprimer2.setText("Enregistrer");
        Imprimer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimer2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(Imprimer1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Imprimer2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(43, 43, 43)
                .addComponent(Imprimer1)
                .addGap(43, 43, 43)
                .addComponent(Imprimer2)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ApercuAvantImpressionJPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(0, 295, Short.MAX_VALUE)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Retour4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(649, 649, 649)
                .addComponent(ApercuAvantImpression1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(Retour4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ApercuAvantImpressionJPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(ApercuAvantImpression1)
                        .addGap(37, 37, 37)
                        .addComponent(ApercuAvantImpressionJPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1031, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulter examen", jPanel15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 210, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Accueil");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateRecherche1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRecherche1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateRecherche1ActionPerformed

    private void dateRecherche2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRecherche2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateRecherche2ActionPerformed

    private void Retour4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour4ActionPerformed
        TexteApercu1.setText("");
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_Retour4ActionPerformed

    private void Imprimer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimer1ActionPerformed
        //pour pouvoir imprimer
        //Code permettant l'ouverture d'une fenetre qui permet d'imprimer la fiche de soin ou de la convertir en PDF
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");
        job.setPrintable(new Printable() {

            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(1.1, 1.1);

                TexteApercu1.paint(g2);
                return Printable.PAGE_EXISTS;
            }

        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_Imprimer1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane1.setEnabledAt(3, true);
        int nbligne = Tableau1.getRowCount();
        int nbcol = Tableau1.getColumnCount();//nombre de colonnes
        String nomP = ChampNom1.getText();
        String prenomP = ChampPrenom1.getText();
        String titre = "";
        if (ChampSexe.getText().equals('M')) {
            titre = "Monsieur";
        } else {
            titre = "Madame";
        }
        String dateN = ChampDateNaissance.getText();

        String idPat = ChampIdPaitient.getText();
        String DMR = "";
        DMR += "DMR de " + titre + " " + prenomP + " " + nomP + "\n" + "Identifiant du patient : " + idPat + "\n" + "Date de naissance : " + dateN + "\n";
        DMR += "_______________________________________________________________________________________" + "\n" + "\n";
        //On récupère les infos des examens qui sont dans le tableau
        for (int ligne = 0; ligne < nbligne; ligne++) {
            String idExam = Tableau1.getValueAt(ligne, nbcol - 4).toString();
            String type = Tableau1.getValueAt(ligne, nbcol - 3).toString();
            String prenomDoc = Tableau1.getValueAt(ligne, nbcol - 2).toString();
            String nomDoc = Tableau1.getValueAt(ligne, nbcol - 1).toString();

            //On récupère la date de l'examen et le cr et les numéro d'archivages
            ExamenBD ebd = null;
            Timestamp dateExam = null;
            String dateFormat = "";
            String cr = "";
            String listeNumeros = "";
            try {
                ebd = new ExamenBD();
                dateExam = ebd.recupDateExam(idExam);
                SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd hh:mm");
                dateFormat = formater.format(dateExam);

                cr = ebd.recupContenuCR1(idExam);

                listeNumeros = ebd.recupNumeroArchivage(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }

            DMR += "Examen " + (ligne + 1) + "\n";
            DMR += "Date de l'examen : " + dateFormat + "\n";
            DMR += "Identifiant de l'examen : " + idExam + "\n" + "Type : " + type + "\n" + " Prénom du praticien :" + prenomDoc + "\n" + "Nom du praticien : " + nomDoc + "\n";
            DMR += "Compte-rendu : " + "\n" + cr + "\n";
            DMR += "Lien vers le PACS : " + "\n" + listeNumeros + "\n";

        }

        jTabbedPane1.setSelectedIndex(3);
        TexteApercu.setText(DMR);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void Tableau1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tableau1MouseClicked
        if (evt.getClickCount() == 2) {

            int ligne = Tableau1.getSelectedRow();
            int nbcol = Tableau1.getColumnCount();//nombre de colonnes

            String nomP = ChampNom1.getText();
            String prenomP = ChampPrenom1.getText();
            String titre = "";
            if (ChampSexe.getText().equals('M')) {
                titre = "Monsieur";
            } else {
                titre = "Madame";
            }
            String dateN = ChampDateNaissance.getText();

            String idPat = ChampIdPaitient.getText();
            String DMR = "";
            DMR += "Examen de " + titre + " " + prenomP + " " + nomP + "\n" + "Identifiant du patient : " + idPat + "\n" + "Date de naissance : " + dateN + "\n";
            DMR += "_______________________________________________________________________________________" + "\n" + "\n";
            //On récupère les infos des examens qui sont dans le tableau

            String idExam = Tableau1.getValueAt(ligne, nbcol - 4).toString();
            String type = Tableau1.getValueAt(ligne, nbcol - 3).toString();
            String prenomDoc = Tableau1.getValueAt(ligne, nbcol - 2).toString();
            String nomDoc = Tableau1.getValueAt(ligne, nbcol - 1).toString();

            //On récupère la date de l'examen et le cr et les numéro d'archivages
            ExamenBD ebd = null;
            Timestamp dateExam = null;
            String dateFormat = "";
            String cr = "";
            String listeNumeros = "";
            try {
                ebd = new ExamenBD();
                dateExam = ebd.recupDateExam(idExam);
                SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd hh:mm");
                dateFormat = formater.format(dateExam);

                cr = ebd.recupContenuCR1(idExam);

                listeNumeros = ebd.recupNumeroArchivage(idExam);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }

            DMR += "Examen " + (ligne + 1) + "\n";
            DMR += "Date de l'examen : " + dateFormat + "\n";
            DMR += "Identifiant de l'examen : " + idExam + "\n" + "Type : " + type + "\n" + " Prénom du praticien :" + prenomDoc + "\n" + "Nom du praticien : " + nomDoc + "\n";
            DMR += "Compte-rendu : " + "\n" + cr + "\n";
            DMR += "Lien vers le PACS : " + "\n" + listeNumeros + "\n";

            jTabbedPane1.setSelectedIndex(4);
            TexteApercu1.setText(DMR);

        }
    }//GEN-LAST:event_Tableau1MouseClicked

    private void Retour2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour2ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_Retour2ActionPerformed

    private void DateNaissanceChampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateNaissanceChampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateNaissanceChampActionPerformed

    private void AjouterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterPatientActionPerformed
        String nom = ChampNom.getText().toUpperCase();
        String prenom = ChampPrenom.getText();
        String adresse = ChampAdresse.getText() + ", " + ChampCodePostal.getText() + " " + ChampVille.getText();
        String date = DateNaissanceChamp.getText();
        Genre genre = null;
        if (Feminin.isSelected()) {
            genre = Genre.F;
        }
        if (Masculin.isSelected()) {
            genre = Genre.M;
        }
        if (nom.equals("") || prenom.equals("") || adresse.equals("") || date.equals("") || genre == null) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tout les champs");
        } else {
            try {
                PatientsBD pbd = new PatientsBD();
                pbd.insererUnPatient(nom, prenom, adresse, genre.toString(), date);
                JOptionPane.showMessageDialog(this, "Patient ajouté au SIR");
                ChampNom.setText("");
                ChampPrenom.setText("");
                ChampAdresse.setText("");
                ChampCodePostal.setText("");
                ChampVille.setText("");
                DateNaissanceChamp.setText("");

                PatientsBD pbd1 = new PatientsBD();
                DefaultTableModel liste = new DefaultTableModel();
                liste.addColumn("ID");
                liste.addColumn("Nom");
                liste.addColumn("Prénom");
                liste.addColumn("Sexe");
                liste.addColumn("Date de Naissance");
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd1.listePatientModel(liste);
                Tableau.setModel(liste);

                Tableau.repaint();
            } catch (SQLException ex) {
                //Logger.getLogger(AjouterPatient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_AjouterPatientActionPerformed

    private void ChampAdresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChampAdresseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChampAdresseActionPerformed

    private void Retour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour1ActionPerformed

        jTabbedPane1.setSelectedIndex(0);

    }//GEN-LAST:event_Retour1ActionPerformed

    private void choixCritereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixCritereActionPerformed
        if (choixCritere.getSelectedIndex() == 0) {
            idRecherche.setVisible(true);
            jLabelIdentifiant.setVisible(true);

            nomRecherche.setVisible(false);
            jLabelNomRecherche.setVisible(false);

            prenomRecherche.setVisible(false);
            jLabelPrenomRecherche.setVisible(false);

            dateRecherche.setVisible(false);
            jLabelDateRecherche.setVisible(false);

        }
        if (choixCritere.getSelectedIndex() == 1) {
            nomRecherche.setVisible(true);
            jLabelNomRecherche.setVisible(true);

            prenomRecherche.setVisible(true);
            jLabelPrenomRecherche.setVisible(true);

            idRecherche.setVisible(false);
            jLabelIdentifiant.setVisible(false);

            dateRecherche.setVisible(false);
            jLabelDateRecherche.setVisible(false);
        }

        if (choixCritere.getSelectedIndex() == 2) {

            nomRecherche.setVisible(true);
            jLabelNomRecherche.setVisible(true);

            prenomRecherche.setVisible(true);
            jLabelPrenomRecherche.setVisible(true);

            dateRecherche.setVisible(true);
            jLabelDateRecherche.setVisible(true);

            idRecherche.setVisible(false);
            jLabelIdentifiant.setVisible(false);
        }
        if (choixCritere.getSelectedIndex() == 3) {

            nomRecherche.setVisible(true);
            jLabelNomRecherche.setVisible(true);

            prenomRecherche.setVisible(true);
            jLabelPrenomRecherche.setVisible(true);

            idRecherche.setVisible(true);
            jLabelIdentifiant.setVisible(true);

            dateRecherche.setVisible(true);
            jLabelDateRecherche.setVisible(true);
        }
    }//GEN-LAST:event_choixCritereActionPerformed

    private void dateRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateRechercheActionPerformed

    private void RechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercheActionPerformed
        String nomR = nomRecherche.getText().toUpperCase();
        String prenomR = prenomRecherche.getText();
        String idR = idRecherche.getText();
        String dateR = dateRecherche.getText();

        //recherche avec nom & prénom
        //if (!nomR.equals("") && !prenomR.equals("") && idR.equals("") && dateR.equals("")) {
        if (choixCritere.getSelectedIndex() == 1) {
            //recherche du patient
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("ID");
            liste.addColumn("Nom");
            liste.addColumn("Prénom");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            try {
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd.rechPatNomPrenom(prenomR, nomR, liste);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);

            Tableau.repaint();
            if (liste.getRowCount() != 0) {
                JOptionPane.showMessageDialog(this, "Patients trouvé");
            } else {
                JOptionPane.showMessageDialog(this, "Aucun résultat");
            }
        }
        //recherche avec le prénom , nom et date de naissance
        if (choixCritere.getSelectedIndex() == 2) {
            //recherche du patient
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            //COPIEZ LAAAAAAAAAAAAAAAQAAAAA
            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("ID");
            liste.addColumn("Nom");
            liste.addColumn("Prénom");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            try {
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd.rechPatPrenomNomDate(prenomR, nomR, dateR, liste);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);

            Tableau.repaint();

            if (liste.getRowCount() != 0) {
                JOptionPane.showMessageDialog(this, "Patients trouvé");
            } else {
                JOptionPane.showMessageDialog(this, "Aucun résultat");
            }

        }
        //recherche avec le prénom , nom, date de naissance & ID
        if (choixCritere.getSelectedIndex() == 3) {
            //recherche du patient
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            //COPIEZ LAAAAAAAAAAAAAAAQAAAAA
            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("ID");
            liste.addColumn("Nom");
            liste.addColumn("Prénom");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            try {
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd.rechPatPrenomNomDate(prenomR, nomR, dateR, liste);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);

            Tableau.repaint();

            if (liste.getRowCount() != 0) {
                JOptionPane.showMessageDialog(this, "Patients trouvé");
            } else {
                JOptionPane.showMessageDialog(this, "Aucun résultat");
            }

        }
        //recherche avec l'ID
        if (choixCritere.getSelectedIndex() == 0) {
            //recherche du patient
            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            //COPIEZ LAAAAAAAAAAAAAAAQAAAAA
            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("ID");
            liste.addColumn("Nom");
            liste.addColumn("Prénom");
            liste.addColumn("Sexe");
            liste.addColumn("Date de Naissance");
            try {
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                liste = pbd.rechPatID(idR, liste);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau.setModel(liste);

            Tableau.repaint();

            if (liste.getRowCount() != 0) {
                JOptionPane.showMessageDialog(this, "Patients trouvé");
            } else {
                JOptionPane.showMessageDialog(this, "Aucun résultat");
            }

        }

        //si patient trouvé affichage dans la liste, si on clique sur lui affichage de l'onglet consultation avec les infos du patient qui se reporte
        //sinon message pas de patient
        //recherche avec prenom seulement
        //recherche avec dateN seulement
        //rechercher avec nom et prenom
        //recherche avec nom date
        //recherche prenom date
        //recherche avec nom prenom date
    }//GEN-LAST:event_RechercheActionPerformed

    private void prenomRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomRechercheActionPerformed

    private void nomRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomRechercheActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetourActionPerformed
        Connexion c = new Connexion();

        c.setVisible(true); //affichage de la nouvelle page

        this.dispose();// pour fermer l’ancienne page
    }//GEN-LAST:event_RetourActionPerformed

    private void TableauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauMouseClicked
        if (evt.getClickCount() == 2) { // détection du double clique

            JTable cible = (JTable) evt.getSource();
            int ligne = cible.getSelectedRow(); //ligne du tableau sélectionnée.
            int col = Tableau.getColumnCount();

            String idPat = Tableau.getValueAt(ligne, col - 5).toString();
            String nomPat = Tableau.getValueAt(ligne, col - 4).toString();
            String prenomPat = Tableau.getValueAt(ligne, col - 3).toString();
            String sexe = Tableau.getValueAt(ligne, col - 2).toString();
            String dateN = Tableau.getValueAt(ligne, col - 1).toString();

            jTabbedPane1.setSelectedIndex(2);
            ChampNom1.setText(nomPat);
            ChampPrenom1.setText(prenomPat);
            ChampSexe.setText(sexe);
            //ChampAdresse
            ChampDateNaissance.setText(dateN);
            ChampIdPaitient.setText(idPat);

            PatientsBD pbd = null;
            try {
                pbd = new PatientsBD();
            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                ChampAdresse1.setText(pbd.recupAdresse(idPat));

            } catch (SQLException ex) {
                Logger.getLogger(PHRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            DefaultTableModel liste = new DefaultTableModel();
            liste.addColumn("idExam");
            liste.addColumn("type");
            liste.addColumn("PrénomDoc");
            liste.addColumn("NomDoc");

            ExamenBD ebd = null;
            try {
                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                ebd = new ExamenBD();
                liste = ebd.listeExamRéduite(idPat, liste);
            } catch (SQLException ex) {
                Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            Tableau1.setModel(liste);

            Tableau1.repaint();

        }
    }//GEN-LAST:event_TableauMouseClicked

    private void Retour3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Retour3ActionPerformed
        TexteApercu.setText("");
        jTabbedPane1.setSelectedIndex(2);
         jTabbedPane1.setEnabledAt(3, false);
    }//GEN-LAST:event_Retour3ActionPerformed

    private void ImprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimerActionPerformed
       
//pour pouvoir imprimer
        //Code permettant l'ouverture d'une fenetre qui permet d'imprimer la fiche de soin ou de la convertir en PDF
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");
        job.setPrintable(new Printable() {

            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(1.1, 1.1);

                TexteApercu.paint(g2);
                return Printable.PAGE_EXISTS;
            }

        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_ImprimerActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        PatientsBD pbd1 = null;
        try {
            pbd1 = new PatientsBD();
        } catch (SQLException ex) {
            Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel liste = new DefaultTableModel();
        liste.addColumn("ID");
        liste.addColumn("Nom");
        liste.addColumn("Prénom");
        liste.addColumn("Sexe");
        liste.addColumn("Date de Naissance");
        try {
            //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            liste = pbd1.listePatientModel(liste);
        } catch (SQLException ex) {
            Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
        }
        Tableau.setModel(liste);

        Tableau.repaint();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        inter.connection(8882);
        Date dateN = new Date();

        /*char service = 'E';   // E Emergency/I Inpatient/ O Outpatient /P Preadmit /R Recurring patient /B Obstetrics /C Commercial Account/N Not Applicable
        char sexe = 'F';
        Patient p = new Patient(101, "FREDERIC", service); //envoi d'un patient (id,nom, classP)
        p.setFirstName("Solane");
        p.setBirth(dateN);
        p.setDeath(false);
        p.setSex(sexe);

        System.out.println("Id:" + p.getID());
        System.out.println("Prénom :" + p.getFirstName());
        System.out.println("Nom :" + p.getFamillyName());
        System.out.println("Sexe : " + p.getCharSex());
        System.out.println("Service : " + p.getCharPatClass());
        System.out.println("Date de naissance :" + p.getBirth());*/

        //inter.envoyerPatient(p, "localhost", 8882); //interop envoi d'un patient en local(localhost), sur le port 8882
        System.out.println("RECEVOIR");
        Patient pat = inter.recevoirMessage(8882); //Renvoi un message 
       
             int id =pat.getID();
             System.out.println("id");
            
             String prenom = pat.getFirstName();
             String nom = pat.getFamillyName();
             //Date dateNaissance = pat.getBirth();
              Date dateNaissance = new Date();
              String sexeP = pat.getSex();
              System.out.println("sexed :"+sexeP);
             //char sexeP=pat.getCharSex();
             String genre="F";
            /* if (sexeP.equals("Male")){
                 genre = "M";
                 
             }else{
                  genre ="F";
             }*/
             String idPat = String.valueOf(id);
              java.sql.Date sDate = new java.sql.Date(dateNaissance.getTime());
              SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yy");
              String dateString = formater.format(sDate);
             //String dateString= sDate.toString();
             System.out.println("yo "+dateString);
             
            PatientsBD pbd=null;
           try {
               pbd=new PatientsBD();
           } catch (SQLException ex) {
               Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
           }
             
           try {
               pbd.insererUnPatient(nom, prenom,"non renseigné", genre,dateString);
           } catch (SQLException ex) {
               Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
           }
           inter.fermerServeur();
            
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void FemininActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemininActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FemininActionPerformed

    private void EnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerActionPerformed
        String nomPat= ChampNom1.getText();
        String prenomPat = ChampPrenom1.getText();
        String idPat= ChampIdPaitient.getText();
        Document document = new Document();

        
      try
      {
         PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("./src/DMRPatients/DMR_"+nomPat+"_"+prenomPat+"_"+idPat+" .pdf"));
         document.open();
         document.add(new Paragraph(TexteApercu.getText()));
         document.close();
         writer.close();
      } catch (DocumentException | FileNotFoundException e)
      {
      }
   

    }//GEN-LAST:event_EnregistrerActionPerformed

    private void Imprimer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimer2ActionPerformed
       String nomPat= ChampNom1.getText();
        String prenomPat = ChampPrenom1.getText();
        String idPat= ChampIdPaitient.getText();
        Document document = new Document();

        
      try
      {
         PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("./src/ExamPatients/Examen_"+nomPat+"_"+prenomPat+"_"+idPat+" .pdf"));
         document.open();
         document.add(new Paragraph(TexteApercu1.getText()));
         document.close();
         writer.close();
      } catch (DocumentException | FileNotFoundException e)
      {
      }
    }//GEN-LAST:event_Imprimer2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecMedicale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecMedicale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecMedicale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecMedicale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SecMedicale().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SecMedicale.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adresse;
    private javax.swing.JLabel Adresse1;
    private javax.swing.JLabel AjoutNewPatient;
    private javax.swing.JButton AjouterPatient;
    private javax.swing.JLabel ApercuAvantImpression;
    private javax.swing.JLabel ApercuAvantImpression1;
    private javax.swing.JPanel ApercuAvantImpressionJPanel;
    private javax.swing.JPanel ApercuAvantImpressionJPanel1;
    private javax.swing.JPanel ApercuAvantImpressionJPanel2;
    private javax.swing.JPanel ApercuAvantImpressionJPanel3;
    private javax.swing.JTextField ChampAdresse;
    private javax.swing.JLabel ChampAdresse1;
    private javax.swing.JFormattedTextField ChampCodePostal;
    private javax.swing.JLabel ChampDateNaissance;
    private javax.swing.JLabel ChampIdPaitient;
    private javax.swing.JTextField ChampNom;
    private javax.swing.JLabel ChampNom1;
    private javax.swing.JTextField ChampPrenom;
    private javax.swing.JLabel ChampPrenom1;
    private javax.swing.JLabel ChampSexe;
    private javax.swing.JTextField ChampVille;
    private javax.swing.JLabel CodePostal;
    private javax.swing.JLabel DateNaissa;
    private javax.swing.JLabel DateNaissance;
    private javax.swing.JFormattedTextField DateNaissanceChamp;
    private javax.swing.JButton Enregistrer;
    private javax.swing.JRadioButton Feminin;
    private javax.swing.JButton Imprimer;
    private javax.swing.JButton Imprimer1;
    private javax.swing.JButton Imprimer2;
    private javax.swing.JRadioButton Masculin;
    private javax.swing.JLabel MessageDMRtext;
    private javax.swing.JLabel Nom;
    private javax.swing.JLabel NomPatient;
    private javax.swing.JPanel PanelBas;
    private javax.swing.JPanel PanelHaut;
    private javax.swing.JPanel PanelHaut1;
    private javax.swing.JPanel PanelHaut2;
    private javax.swing.JPanel PanelHaut3;
    private javax.swing.JPanel Panelmilieu;
    private javax.swing.JPanel Panelmilieu1;
    private javax.swing.JLabel Prenom;
    private javax.swing.JLabel PrenomPatient;
    private javax.swing.JButton Recherche;
    private javax.swing.JButton Retour;
    private javax.swing.JButton Retour1;
    private javax.swing.JButton Retour2;
    private javax.swing.JButton Retour3;
    private javax.swing.JButton Retour4;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JLabel Sexe;
    private javax.swing.JLabel Sexe1;
    private javax.swing.JTable Tableau;
    private javax.swing.JTable Tableau1;
    private javax.swing.JScrollPane TableauSccroll;
    private javax.swing.JTextPane TexteApercu;
    private javax.swing.JTextPane TexteApercu1;
    private javax.swing.JLabel Titre;
    private javax.swing.JLabel Ville;
    private javax.swing.JComboBox choixCritere;
    private javax.swing.JFormattedTextField dateRecherche;
    private javax.swing.JLabel dmr;
    private javax.swing.JLabel idPatient;
    private javax.swing.JTextField idRecherche;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelDateRecherche;
    private javax.swing.JLabel jLabelIdentifiant;
    private javax.swing.JLabel jLabelNomRecherche;
    private javax.swing.JLabel jLabelPrenomRecherche;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nomRecherche;
    private javax.swing.JTextField prenomRecherche;
    // End of variables declaration//GEN-END:variables
}
